{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:105)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:91)]"],"mutant":{"filename":"Lambda.java","line":1227,"block":147,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;Ljava\/util\/Collection;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":10,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":37,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":11,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.group.StringGroupCondition.getGroupValue(StringGroupCondition.java:41), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":10,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:95)]"],"mutant":{"filename":"IntrospectionUtil.java","line":43,"block":12,"id":{"indexes":"[66]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:95)]"],"mutant":{"filename":"IntrospectionUtil.java","line":37,"block":8,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:105)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:91)]"],"mutant":{"filename":"GroupImpl.java","line":29,"block":1,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"addItem","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupImpl.java","line":42,"block":7,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupImpl.java","line":35,"block":4,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupImpl.java","line":35,"block":6,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:96)]"],"mutant":{"filename":"GroupImpl.java","line":33,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:105)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:91)]"],"mutant":{"filename":"Groups.java","line":33,"block":2,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Iterable;Ljava\/util\/Collection;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:105)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:91)]"],"mutant":{"filename":"Groups.java","line":58,"block":7,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:62), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:62), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]"],"mutant":{"filename":"Groups.java","line":61,"block":9,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"Groups.java","line":60,"block":8,"id":{"indexes":"[38]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]"],"mutant":{"filename":"Groups.java","line":62,"block":9,"id":{"indexes":"[55]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"Groups.java","line":60,"block":8,"id":{"indexes":"[38]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.setChildren(GroupItem.java:80), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:105)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.setChildren(GroupItem.java:80), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:91)]"],"mutant":{"filename":"Groups.java","line":67,"block":11,"id":{"indexes":"[86]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]"],"mutant":{"filename":"Groups.java","line":63,"block":10,"id":{"indexes":"[77]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:56), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:58)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:105)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:91)]"],"mutant":{"filename":"Groups.java","line":58,"block":7,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]"],"mutant":{"filename":"Groups.java","line":63,"block":10,"id":{"indexes":"[73]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"Groups.java","line":66,"block":11,"id":{"indexes":"[82]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"GroupItem.java","line":33,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getGroupKey","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"GroupItem.java","line":67,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupItem.java","line":47,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"()Ljava\/util\/List;","method":"getChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.iterator(GroupItem.java:63), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.iterator(GroupItem.java:63), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]"],"mutant":{"filename":"GroupItem.java","line":67,"block":12,"id":{"indexes":"[8]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]"],"mutant":{"filename":"GroupItem.java","line":63,"block":10,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"iterator","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupItem.java","line":43,"block":5,"id":{"indexes":"[12]","location":{"mdesc":"()Ljava\/util\/List;","method":"getChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"GroupItem.java","line":80,"block":19,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/group\/GroupImpl;)V","method":"setChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:103)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:89)]"],"mutant":{"filename":"GroupItem.java","line":29,"block":1,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)V","method":"<init>","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupItem.java","line":37,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getChildrenNodeName","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupItem.java","line":74,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"addChild","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupCondition.java","line":69,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/List;)V","method":"sortGroup","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupCondition.java","line":50,"block":6,"id":{"indexes":"[48]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"GroupCondition.java","line":69,"block":12,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/List;)V","method":"sortGroup","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"GroupCondition.java","line":35,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupCondition;","method":"as","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"GroupCondition.java","line":39,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"getAdditionalPropertyNames","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:95)]"],"mutant":{"filename":"GroupCondition.java","line":54,"block":9,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"asNotNullString","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:95)]"],"mutant":{"filename":"GroupCondition.java","line":54,"block":7,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"asNotNullString","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:95)]"],"mutant":{"filename":"GroupCondition.java","line":47,"block":5,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:103)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:89)]"],"mutant":{"filename":"GroupCondition.java","line":25,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getAlias","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"StringGroupCondition.java","line":50,"block":4,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/StringGroupCondition;","method":"head","class":"ch.lambdaj.group.StringGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:109), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:95)]"],"mutant":{"filename":"StringGroupCondition.java","line":65,"block":6,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/String;Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"getAdditionalPropertyValue","class":"ch.lambdaj.group.StringGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:111)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:72)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:96)]"],"mutant":{"filename":"StringGroupCondition.java","line":41,"block":3,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"getGroupValue","class":"ch.lambdaj.group.StringGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":[],"mutant":{"filename":"StringGroupCondition.java","line":61,"block":5,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/String;Ljava\/lang\/String;)Lch\/lambdaj\/group\/StringGroupCondition;","method":"head","class":"ch.lambdaj.group.StringGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest)]"],"killing":["Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCountries(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCountries(GroupByTest.java:122)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAsExposures(GroupByTest.java:82)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsExposures(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsExposures(GroupByTest.java:128)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredName(GroupByTest.java:54)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAndInsuredName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAndInsuredName(GroupByTest.java:117)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryNameAsCode(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryNameAsCode(GroupByTest.java:101)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByInsuredNameAndCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByInsuredNameAndCountryName(GroupByTest.java:64)]","Description [testClass=ch.lambdaj.group.GroupByTest, name=testGroupByCountryName(ch.lambdaj.group.GroupByTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:33), ch.lambdaj.Lambda.group(Lambda.java:1227), ch.lambdaj.group.GroupByTest.testGroupByCountryName(GroupByTest.java:87)]"],"mutant":{"filename":"StringGroupCondition.java","line":37,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getGroupName","class":"ch.lambdaj.group.StringGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
