{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]"],"mutant":{"filename":"Lambda.java","line":1121,"block":138,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"map","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]"],"mutant":{"filename":"Lambda.java","line":833,"block":112,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"max","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Lambda.java","line":1030,"block":127,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Iterator;","method":"convertIterator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.typedSum(Lambda.java:604), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"Lambda.java","line":604,"block":80,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"Lambda.java","line":540,"block":75,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/aggregate\/Aggregator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Lambda.java","line":63,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"on","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]"],"mutant":{"filename":"Lambda.java","line":249,"block":21,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;I)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":997,"block":121,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"Lambda.java","line":1017,"block":125,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/List;","method":"convert","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]"],"mutant":{"filename":"Lambda.java","line":606,"block":82,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":504,"block":68,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/aggregate\/Aggregator;","method":"getSumAggregator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]"],"mutant":{"filename":"Lambda.java","line":1133,"block":139,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/Map;","method":"index","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:182)]"],"mutant":{"filename":"Lambda.java","line":1247,"block":149,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Lambda.java","line":573,"block":77,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Ljava\/lang\/Class;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregateFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Lambda.java","line":484,"block":65,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMin","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"Lambda.java","line":357,"block":41,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"Lambda.java","line":1217,"block":146,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/group\/ArgumentGroupCondition;","method":"by","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]"],"mutant":{"filename":"Lambda.java","line":264,"block":24,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Lambda.java","line":1193,"block":144,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Boolean;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"having","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Lambda.java","line":1018,"block":126,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/List;","method":"convert","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]"],"mutant":{"filename":"Lambda.java","line":856,"block":113,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"maxFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"Lambda.java","line":606,"block":84,"id":{"indexes":"[30]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Lambda.java","line":637,"block":96,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"sumFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"Lambda.java","line":93,"block":7,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Lambda.java","line":329,"block":33,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]"],"mutant":{"filename":"Lambda.java","line":984,"block":119,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"Lambda.java","line":761,"block":108,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"min","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]"],"mutant":{"filename":"Lambda.java","line":236,"block":20,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]"],"mutant":{"filename":"Lambda.java","line":265,"block":24,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]"],"mutant":{"filename":"Lambda.java","line":1117,"block":137,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"map","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":604,"block":81,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]"],"mutant":{"filename":"Lambda.java","line":997,"block":120,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":505,"block":69,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/aggregate\/Aggregator;","method":"getSumAggregator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]"],"mutant":{"filename":"Lambda.java","line":902,"block":115,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"joinFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]"],"mutant":{"filename":"Lambda.java","line":263,"block":23,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"Lambda.java","line":91,"block":5,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"Lambda.java","line":505,"block":70,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/aggregate\/Aggregator;","method":"getSumAggregator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"Lambda.java","line":600,"block":79,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"sum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Lambda.java","line":332,"block":35,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"Lambda.java","line":345,"block":40,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Lambda.java","line":525,"block":74,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.find(GroupImpl.java:110), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]"],"mutant":{"filename":"Lambda.java","line":496,"block":66,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMax","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":344,"block":39,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":329,"block":34,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Lambda.java","line":1066,"block":132,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/List;","method":"extract","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Lambda.java","line":556,"block":76,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregateFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Lambda.java","line":344,"block":38,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:357), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"Lambda.java","line":1204,"block":145,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"having","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Lambda.java","line":330,"block":36,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.getSumAggregator(Lambda.java:504), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"Lambda.java","line":504,"block":67,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/aggregate\/Aggregator;","method":"getSumAggregator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]"],"mutant":{"filename":"Lambda.java","line":999,"block":122,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"Lambda.java","line":334,"block":37,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":25,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":95,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$7463d356.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$7463d356.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":48,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":19,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]"],"mutant":{"filename":"ArgumentsFactory.java","line":60,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$db3f1e25.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$db3f1e25.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$66cca280.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$84791d3a.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$db3f1e25.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":47,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":94,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":52,"block":6,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":46,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":268,"block":112,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLong","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":268,"block":113,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLong","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":272,"block":118,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isDouble","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$123f0795.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$123f0795.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":49,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":64,"block":8,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":39,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":272,"block":115,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isDouble","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$db3f1e25.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$db3f1e25.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$66cca280.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$84791d3a.isMale(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$84791d3a.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$db3f1e25.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":54,"block":6,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":63,"block":8,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":22,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":272,"block":117,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isDouble","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":29,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$7239d93c.isMale(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":31,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":255,"block":96,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":49,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":109,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":272,"block":116,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isDouble","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":108,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9dcc8bf0.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9dcc8bf0.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9dcc8bf0.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$bb7906aa.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$123f0795.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":12,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":187,"block":50,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":52,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":26,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":255,"block":97,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":256,"block":98,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":24,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":20,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":30,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":93,"block":17,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":92,"block":15,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":51,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":110,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":256,"block":99,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":23,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":13,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:157)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":51,"block":5,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":107,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":268,"block":114,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLong","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ArgumentsFactory.java","line":268,"block":111,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLong","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":3,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":2,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":1,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":27,"block":7,"id":{"indexes":"[57]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"IntrospectionUtil.java","line":164,"block":62,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"clone","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":162,"block":60,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"clone","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":3,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[21]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":115,"block":40,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":34,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":104,"block":37,"id":{"indexes":"[58]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":116,"block":41,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":42,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":66,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInvokedPropertyName","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[52]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":38,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$e49e310f.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$e49e310f.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$8dd83024.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$702bb56a.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$8dd83024.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$e49e310f.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Invocation.java","line":103,"block":36,"id":{"indexes":"[43]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":49,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":46,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":114,"block":39,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":45,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Invocation.java","line":45,"block":10,"id":{"indexes":"[5]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"Invocation.java","line":72,"block":20,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":67,"block":19,"id":{"indexes":"[15]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInvokedPropertyName","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":45,"block":11,"id":{"indexes":"[8]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":33,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[22]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.<init>(Invocation.java:32), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getSize(Unknown Source), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"Invocation.java","line":32,"block":0,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":47,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[36]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":43,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":31,"block":0,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[51]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":58,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/reflect\/Method;","method":"getInvokedMethod","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":48,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":54,"block":15,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getInvokedClass","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"Invocation.java","line":72,"block":22,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$61cbc794.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$61cbc794.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$b05c6a9.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ed594bef.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$b05c6a9.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$61cbc794.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"Invocation.java","line":102,"block":35,"id":{"indexes":"[28]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":25,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[38]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":117,"block":31,"id":{"indexes":"[55]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"InvocationSequence.java","line":73,"block":14,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":78,"block":17,"id":{"indexes":"[7]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":111,"block":29,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"InvocationSequence.java","line":82,"block":18,"id":{"indexes":"[29]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"InvocationSequence.java","line":65,"block":10,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":115,"block":30,"id":{"indexes":"[42]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":102,"block":24,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":78,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":121,"block":33,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:82), ch.lambdaj.function.argument.InvocationSequence.getInkvokedPropertyName(InvocationSequence.java:73), ch.lambdaj.function.argument.Argument.getInkvokedPropertyName(Argument.java:31), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:82), ch.lambdaj.function.argument.InvocationSequence.getInkvokedPropertyName(InvocationSequence.java:73), ch.lambdaj.function.argument.Argument.getInkvokedPropertyName(Argument.java:31), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"InvocationSequence.java","line":81,"block":18,"id":{"indexes":"[23]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"InvocationSequence.java","line":131,"block":35,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$e9f7653d.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$e9f7653d.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$93316452.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$7584e998.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$93316452.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$e9f7653d.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"InvocationSequence.java","line":69,"block":13,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getRootInvokedClass","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":7,"id":{"indexes":"[35]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"InvocationSequence.java","line":141,"block":40,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"InvocationSequence.java","line":140,"block":39,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":26,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":22,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":139,"block":38,"id":{"indexes":"[6]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":64,"block":9,"id":{"indexes":"[45]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"InvocationSequence.java","line":74,"block":15,"id":{"indexes":"[14]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":23,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"InvocationSequence.java","line":121,"block":32,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:87), ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:81), ch.lambdaj.function.argument.InvocationSequence.getInkvokedPropertyName(InvocationSequence.java:73), ch.lambdaj.function.argument.Argument.getInkvokedPropertyName(Argument.java:31), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:87), ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:81), ch.lambdaj.function.argument.InvocationSequence.getInkvokedPropertyName(InvocationSequence.java:73), ch.lambdaj.function.argument.Argument.getInkvokedPropertyName(Argument.java:31), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"InvocationSequence.java","line":86,"block":19,"id":{"indexes":"[4]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/StringBuilder;)V","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"InvocationSequence.java","line":113,"block":30,"id":{"indexes":"[50]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator.compare(ComparatorUtil.java:55), ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Max.choose(Max.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.MinOnArgument.chooseOnArgument(MinOnArgument.java:32), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:38), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.MaxOnArgument.chooseOnArgument(MaxOnArgument.java:32), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:38), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator.compare(ComparatorUtil.java:55), ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:25), ch.lambdaj.group.GroupComparator.compare(GroupComparator.java:44), ch.lambdaj.group.GroupComparator.compare(GroupComparator.java:1), ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.MinOnArgument.chooseOnArgument(MinOnArgument.java:32), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:38), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"InvocationSequence.java","line":139,"block":37,"id":{"indexes":"[4]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"InvocationSequence.java","line":135,"block":36,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ProxyUtil.java","line":75,"block":26,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":19,"id":{"indexes":"[116]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":21,"id":{"indexes":"[131]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":101,"block":38,"id":{"indexes":"[10]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ProxyUtil.java","line":76,"block":28,"id":{"indexes":"[21]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":6,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":14,"id":{"indexes":"[77]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":15,"id":{"indexes":"[84]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":75,"block":27,"id":{"indexes":"[7]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":49,"block":12,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":102,"block":39,"id":{"indexes":"[14]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":91,"block":32,"id":{"indexes":"[16]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:93), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ProxyUtil.java","line":81,"block":31,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":46,"block":8,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"ProxyUtil.java","line":101,"block":36,"id":{"indexes":"[4]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":17,"id":{"indexes":"[99]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"ProxyUtil.java","line":101,"block":37,"id":{"indexes":"[7]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":48,"block":10,"id":{"indexes":"[34]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$69ceca5f.toString(<generated>), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyUtil.java","line":92,"block":34,"id":{"indexes":"[26]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":18,"id":{"indexes":"[106]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ProxyUtil.java","line":80,"block":29,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":11,"id":{"indexes":"[49]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":80,"block":30,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"ProxyUtil.java","line":102,"block":41,"id":{"indexes":"[20]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$50ff56c8.toString(<generated>), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyUtil.java","line":92,"block":32,"id":{"indexes":"[20]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":102,"block":40,"id":{"indexes":"[17]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"ProxyUtil.java","line":97,"block":35,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/ClassLoader;Ljava\/lang\/reflect\/InvocationHandler;[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createNativeJavaProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":90,"block":32,"id":{"indexes":"[11]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$6d3ad029.toString(<generated>), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyUtil.java","line":93,"block":34,"id":{"indexes":"[30]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"LambdaIterable.java","line":101,"block":8,"id":{"indexes":"[8]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)V","method":"doRetain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:182)]"],"mutant":{"filename":"LambdaIterable.java","line":236,"block":32,"id":{"indexes":"[10]","location":{"mdesc":"([Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/collection\/LambdaGroup;","method":"group","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"LambdaIterable.java","line":170,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/List;","method":"doExtract","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]"],"mutant":{"filename":"LambdaIterable.java","line":129,"block":12,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"doSort","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"LambdaIterable.java","line":34,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaIterator;","method":"iterator","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]"],"mutant":{"filename":"LambdaIterable.java","line":77,"block":5,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"maxFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]"],"mutant":{"filename":"LambdaIterable.java","line":45,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"joinFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"LambdaIterable.java","line":250,"block":34,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/util\/Collection;)Ljava\/lang\/Iterable;","method":"innerClone","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"LambdaIterable.java","line":67,"block":4,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"sumFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":52,"block":10,"id":{"indexes":"[13]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":130,"block":21,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":192,"block":27,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaMap;","method":"index","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":164,"block":24,"id":{"indexes":"[8]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":36,"block":4,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":112,"block":19,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMin","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":94,"block":17,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"max","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":35,"block":3,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":52,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":35,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":44,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Collection;)V","method":"setInnerCollection","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":103,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"sum","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.find(GroupImpl.java:110), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":121,"block":20,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMax","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":41,"block":11,"id":{"indexes":"[46]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"Sum.java","line":42,"block":13,"id":{"indexes":"[57]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:39), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$d43c17ad.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Sum.java","line":39,"block":6,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:40), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$65510d54.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Sum.java","line":40,"block":8,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":40,"block":9,"id":{"indexes":"[35]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:41), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$d43c17ad.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Sum.java","line":41,"block":10,"id":{"indexes":"[40]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":37,"block":5,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":39,"block":7,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"Sum.java","line":62,"block":30,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Double;)Ljava\/lang\/Double;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:46), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$56ac5a71.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"Sum.java","line":42,"block":12,"id":{"indexes":"[51]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"Sum.java","line":62,"block":30,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Double;)Ljava\/lang\/Double;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"Sum.java","line":62,"block":28,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Double;)Ljava\/lang\/Double;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":37,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"Sum.java","line":37,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"LambdaCollection.java","line":201,"block":24,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"size","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.demo.Util.listsAreEqual(Util.java:32), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.demo.Util.listsAreEqual(Util.java:32), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.demo.Util.listsAreEqual(Util.java:32), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.demo.Util.listsAreEqual(Util.java:32), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"LambdaCollection.java","line":27,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"innerCollection","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]"],"mutant":{"filename":"LambdaMap.java","line":141,"block":19,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"get","class":"ch.lambdaj.collection.LambdaMap"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]"],"mutant":{"filename":"LambdaList.java","line":50,"block":4,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"sort","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"LambdaList.java","line":179,"block":21,"id":{"indexes":"[8]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaList;","method":"clone","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]"],"mutant":{"filename":"LambdaList.java","line":49,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"sort","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:160)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"LambdaList.java","line":122,"block":13,"id":{"indexes":"[7]","location":{"mdesc":"(I)Ljava\/lang\/Object;","method":"get","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"LambdaList.java","line":26,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/List;","method":"innerList","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"LambdaList.java","line":34,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"retain","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"LambdaList.java","line":33,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"retain","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"LambdaList.java","line":188,"block":22,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/util\/List;)Lch\/lambdaj\/collection\/LambdaList;","method":"clone","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"LambdaList.java","line":73,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"extract","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"IteratorFactory.java","line":32,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"IteratorFactory.java","line":23,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$ddeb6e1d.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$124dc8c6.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:91), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$124dc8c6.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"IteratorFactory.java","line":69,"block":21,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":49,"block":8,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"IteratorFactory.java","line":49,"block":7,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.forEach(Lambda.java:90), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"IteratorFactory.java","line":69,"block":20,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.map(Lambda.java:1116), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.sort(Lambda.java:263), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.select(Lambda.java:357), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"IteratorFactory.java","line":50,"block":9,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"IteratorFactory.java","line":35,"block":4,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":68,"block":19,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.map(Lambda.java:1117), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.sort(Lambda.java:263), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"IteratorFactory.java","line":50,"block":10,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"IteratorFactory.java","line":68,"block":18,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.typedSum(Lambda.java:605), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"IteratorFactory.java","line":51,"block":11,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"IteratorFactory.java","line":35,"block":6,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"IteratorFactory.java","line":51,"block":12,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"GroupImpl.java","line":70,"block":13,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/Group;","method":"findGroup","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"GroupImpl.java","line":89,"block":16,"id":{"indexes":"[27]","location":{"mdesc":"()Ljava\/util\/List;","method":"subgroups","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:75), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"GroupImpl.java","line":29,"block":1,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"addItem","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupImpl.java","line":42,"block":7,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupImpl.java","line":35,"block":4,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupImpl.java","line":35,"block":6,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"GroupImpl.java","line":100,"block":18,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/util\/List;","method":"find","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"GroupImpl.java","line":79,"block":14,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/group\/Group;","method":"findGroup","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"GroupImpl.java","line":33,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:182)]"],"mutant":{"filename":"GroupImpl.java","line":90,"block":17,"id":{"indexes":"[31]","location":{"mdesc":"()Ljava\/util\/List;","method":"subgroups","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"GroupImpl.java","line":110,"block":21,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/List;","method":"find","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"GroupImpl.java","line":100,"block":20,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/util\/List;","method":"find","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"GroupImpl.java","line":70,"block":11,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/Group;","method":"findGroup","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":36,"block":9,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"ProxyAggregator.java","line":29,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":37,"block":10,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":34,"block":4,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"ProxyAggregator.java","line":35,"block":7,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"ProxyAggregator.java","line":38,"block":12,"id":{"indexes":"[43]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":34,"block":5,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"ProxyAggregator.java","line":29,"block":2,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ProxyAggregator.java","line":49,"block":18,"id":{"indexes":"[10]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Lch\/lambdaj\/function\/aggregate\/Aggregator;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxyAggregator","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":37,"block":11,"id":{"indexes":"[39]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":35,"block":6,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.ProxyAggregator.normalizeResult(ProxyAggregator.java:36), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ff3f678b.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.ProxyAggregator.normalizeResult(ProxyAggregator.java:36), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$ff3f678b.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ProxyAggregator.java","line":36,"block":8,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":51,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$f4890966.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":39,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":101,"block":19,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"iterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":40,"block":3,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"ProxyIterator.java","line":55,"block":15,"id":{"indexes":"[83]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":92,"block":18,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"ProxyIterator.java","line":71,"block":16,"id":{"indexes":"[90]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":52,"block":8,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":40,"block":4,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":53,"block":8,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":81,"block":17,"id":{"indexes":"[9]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":93,"block":18,"id":{"indexes":"[15]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"ProxyIterator.java","line":51,"block":6,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"ProxyIterator.java","line":39,"block":2,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"Groups.java","line":58,"block":7,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:62), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]"],"mutant":{"filename":"Groups.java","line":61,"block":9,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"Groups.java","line":60,"block":8,"id":{"indexes":"[38]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]"],"mutant":{"filename":"Groups.java","line":62,"block":9,"id":{"indexes":"[55]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:160)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"Groups.java","line":60,"block":8,"id":{"indexes":"[38]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.setChildren(GroupItem.java:80), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:182)]"],"mutant":{"filename":"Groups.java","line":67,"block":11,"id":{"indexes":"[86]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:160)]"],"mutant":{"filename":"Groups.java","line":63,"block":10,"id":{"indexes":"[77]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"Groups.java","line":23,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/group\/ArgumentGroupCondition;","method":"by","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"Groups.java","line":58,"block":7,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:160)]"],"mutant":{"filename":"Groups.java","line":63,"block":10,"id":{"indexes":"[73]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"Groups.java","line":66,"block":11,"id":{"indexes":"[82]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"LeafGroup.java","line":55,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/List;","method":"findAll","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]"],"mutant":{"filename":"LeafGroup.java","line":62,"block":5,"id":{"indexes":"[7]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"first","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]"],"mutant":{"filename":"LeafGroup.java","line":95,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"getSize","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"GroupItem.java","line":33,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getGroupKey","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"GroupItem.java","line":67,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.asGroup(GroupItem.java:56), ch.lambdaj.group.GroupImpl.subgroups(GroupImpl.java:89), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.asGroup(GroupItem.java:56), ch.lambdaj.group.GroupImpl.subgroups(GroupImpl.java:89), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:182)]"],"mutant":{"filename":"GroupItem.java","line":56,"block":7,"id":{"indexes":"[5]","location":{"mdesc":"()Lch\/lambdaj\/group\/Group;","method":"asGroup","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupItem.java","line":47,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"()Ljava\/util\/List;","method":"getChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.iterator(GroupItem.java:63), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]"],"mutant":{"filename":"GroupItem.java","line":67,"block":12,"id":{"indexes":"[8]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]"],"mutant":{"filename":"GroupItem.java","line":63,"block":10,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"iterator","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupItem.java","line":43,"block":5,"id":{"indexes":"[12]","location":{"mdesc":"()Ljava\/util\/List;","method":"getChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"GroupItem.java","line":80,"block":19,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/group\/GroupImpl;)V","method":"setChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupItem.java","line":29,"block":1,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)V","method":"<init>","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupItem.java","line":37,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getChildrenNodeName","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"GroupItem.java","line":56,"block":9,"id":{"indexes":"[20]","location":{"mdesc":"()Lch\/lambdaj\/group\/Group;","method":"asGroup","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupItem.java","line":74,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"addChild","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"LambdaGroup.java","line":84,"block":7,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"find","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:182)]"],"mutant":{"filename":"LambdaGroup.java","line":64,"block":5,"id":{"indexes":"[7]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaList;","method":"subgroups","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]"],"mutant":{"filename":"LambdaGroup.java","line":55,"block":4,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaGroup;","method":"findGroup","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getNextEnumPlaceholder(ArgumentsFactory.java:147), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getNextPlaceholder(ArgumentsFactory.java:138), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$67963830.isMale(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":138,"block":10,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"getNextPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":133,"block":9,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"getArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":124,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;)I","method":"booleanToInt","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":142,"block":13,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"getNextBooleanPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":128,"block":4,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"setArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":133,"block":7,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"getArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:58), ch.lambdaj.Lambda.having(Lambda.java:1193), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":138,"block":12,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"getNextPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":143,"block":15,"id":{"indexes":"[17]","location":{"mdesc":"()Z","method":"getNextBooleanPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":124,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)I","method":"booleanToInt","class":"ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":29,"block":5,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":30,"block":6,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]"],"mutant":{"filename":"ComparatorUtil.java","line":36,"block":9,"id":{"indexes":"[8]","location":{"mdesc":"(I)Ljava\/util\/Comparator;","method":"getStandardComparator","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":30,"block":8,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":29,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":29,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":25,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupCondition.java","line":65,"block":10,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Comparable;)Lch\/lambdaj\/group\/GroupCondition;","method":"sort","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"GroupCondition.java","line":69,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/List;)V","method":"sortGroup","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupCondition.java","line":50,"block":6,"id":{"indexes":"[48]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"GroupCondition.java","line":69,"block":12,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/List;)V","method":"sortGroup","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupCondition.java","line":39,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"getAdditionalPropertyNames","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupCondition.java","line":47,"block":5,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"GroupCondition.java","line":25,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getAlias","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"Argument.java","line":31,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInkvokedPropertyName","class":"ch.lambdaj.function.argument.Argument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"Argument.java","line":41,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.Argument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":46,"block":7,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":40,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":42,"block":9,"id":{"indexes":"[51]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":51,"block":14,"id":{"indexes":"[88]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":57,"block":15,"id":{"indexes":"[93]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":44,"block":5,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":55,"block":13,"id":{"indexes":"[76]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Concat.java","line":40,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:31)]"],"mutant":{"filename":"Concat.java","line":53,"block":11,"id":{"indexes":"[63]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"LambdaCollections.java","line":34,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/util\/List;)Lch\/lambdaj\/collection\/LambdaList;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"AndMatcher.java","line":25,"block":3,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"AndMatcher.java","line":25,"block":2,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.matcher.AndMatcher.matches(AndMatcher.java:25), ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"AndMatcher.java","line":25,"block":4,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"AndMatcher.java","line":26,"block":5,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.matcher.AndMatcher.matches(AndMatcher.java:25), ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"AndMatcher.java","line":25,"block":4,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84)]"],"mutant":{"filename":"AndMatcher.java","line":25,"block":4,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"AndMatcher.java","line":36,"block":6,"id":{"indexes":"[7]","location":{"mdesc":"([Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/AndMatcher;","method":"and","class":"ch.lambdaj.function.matcher.AndMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":58,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Boolean;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"havingValue","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":33,"block":3,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:42)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":31,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:357), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:57)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":70,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"havingValue","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"HasArgumentWithValue.java","line":31,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:73)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:73)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:101)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Chooser.java","line":23,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Chooser.java","line":22,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:101)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Chooser.java","line":24,"block":5,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$6e9cab5d.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]"],"mutant":{"filename":"Chooser.java","line":40,"block":6,"id":{"indexes":"[4]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"emptyItem","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Max.choose(Max.java:22), ch.lambdaj.function.aggregate.Max.choose(Max.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$cd4fb37d.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Min.choose(Min.java:22), ch.lambdaj.function.aggregate.Min.choose(Min.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.min(Lambda.java:761), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"Chooser.java","line":22,"block":1,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Chooser.java","line":23,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:158)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":28,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getGroupName","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":35,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"getGroupValue","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:184)]"],"mutant":{"filename":"LambdaIterator.java","line":68,"block":5,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.collection.LambdaIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ChooserOnArgument.java","line":37,"block":4,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ChooserOnArgument.java","line":35,"block":2,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"ChooserOnArgument.java","line":37,"block":3,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"ChooserOnArgument.java","line":35,"block":1,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"ChooserOnArgument.java","line":38,"block":5,"id":{"indexes":"[35]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":33,"block":4,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$112f7995.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$112f7995.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$ba6978aa.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$9cbcfdf0.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$ba6978aa.getAge(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$112f7995.getOriginalValue(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyArgument.java","line":33,"block":3,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=com.sun.proxy.$Proxy4.hashCode(Unknown Source), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":2,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$9b8842d6.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$2715c731.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Car$$EnhancerByCGLIB$$9b8842d6.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$2715c731.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Person$$EnhancerByCGLIB$$44c241eb.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$2715c731.getCar(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$2715c731.getBuyer(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"ProxyArgument.java","line":36,"block":5,"id":{"indexes":"[47]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":54,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":55,"block":5,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":55,"block":7,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"ComparatorUtil.java","line":54,"block":1,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":54,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"ConverterIterator.java","line":30,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.function.convert.ConverterIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"ConverterIterator.java","line":37,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.function.convert.ConverterIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"PairAggregator.java","line":24,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"PairAggregator.java","line":24,"block":3,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"PairAggregator.java","line":25,"block":4,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:211)]"],"mutant":{"filename":"MaxOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MaxOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"MaxOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MaxOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.find(GroupImpl.java:110), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:84), ch.lambdaj.collection.LambdaGroup.find(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:209)]"],"mutant":{"filename":"MaxOnArgument.java","line":32,"block":3,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MaxOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"MinOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MinOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"MinOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MinOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:1), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:159)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:58)]"],"mutant":{"filename":"MinOnArgument.java","line":32,"block":3,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MinOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]"],"mutant":{"filename":"Min.java","line":22,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Min.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:101)]"],"mutant":{"filename":"Min.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:43), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$5364bc49.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$87c716f2.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:92), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$87c716f2.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":39,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$35fea853.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$6a6102fc.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:93), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$6a6102fc.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":46,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:42), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Car$$EnhancerByCGLIB$$a2ad5267.getBrand(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:30)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$d70fad10.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:69)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.Lambda.forEach(Lambda.java:91), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:164), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$d70fad10.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":25,"block":0,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"<init>","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":[],"mutant":{"filename":"Max.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Max"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:73)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:70), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:73)]"],"mutant":{"filename":"Max.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Max"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]"],"mutant":{"filename":"Max.java","line":22,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Max"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]"],"mutant":{"filename":"SumDouble.java","line":28,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Double;Ljava\/lang\/Double;)Ljava\/lang\/Double;","method":"aggregate","class":"ch.lambdaj.function.aggregate.SumDouble"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.SumDouble.aggregate(SumDouble.java:28), ch.lambdaj.function.aggregate.SumDouble.aggregate(SumDouble.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:86)]"],"mutant":{"filename":"SumDouble.java","line":28,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Double;Ljava\/lang\/Double;)Ljava\/lang\/Double;","method":"aggregate","class":"ch.lambdaj.function.aggregate.SumDouble"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"LambdaJMatcher.java","line":24,"block":1,"id":{"indexes":"[14]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/LambdaJMatcher;","method":"and","class":"ch.lambdaj.function.matcher.LambdaJMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:84), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":79,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue$BooleanMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:185), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:187)]"],"mutant":{"filename":"GroupComparator.java","line":44,"block":2,"id":{"indexes":"[14]","location":{"mdesc":"(Lch\/lambdaj\/group\/GroupItem;Lch\/lambdaj\/group\/GroupItem;)I","method":"compare","class":"ch.lambdaj.group.GroupComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:62), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:42), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Sale$$EnhancerByCGLIB$$cb54c3e6.getCost(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"InitializedPairAggregator.java","line":27,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"emptyItem","class":"ch.lambdaj.function.aggregate.InitializedPairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.demo.Person$$EnhancerByCGLIB$$de889b18.isMale(<generated>), ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]"],"mutant":{"filename":"ArgumentsFactory.java","line":103,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"()Lch\/lambdaj\/function\/argument\/ArgumentsFactory$LimitedValuesArgumentHolder;","method":"initialValue","class":"ch.lambdaj.function.argument.ArgumentsFactory$1"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:115)]"],"mutant":{"filename":"ArgumentComparator.java","line":65,"block":4,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:132)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllSalesOfAFerrari(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindAllSalesOfAFerrari(LambdaListDemoTest.java:41)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSortSalesByCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.demo.LambdaListDemoTest.testSortSalesByCost(LambdaListDemoTest.java:114)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:27)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.Lambda.max(Lambda.java:833), ch.lambdaj.collection.AbstractLambdaCollection.max(AbstractLambdaCollection.java:94), ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:83)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersAndSellers(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersAndSellers(LambdaListDemoTest.java:156)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostBoughtCar(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testFindMostBoughtCar(LambdaListDemoTest.java:208)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testGroupSalesByBuyersSortedByAge(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.demo.LambdaListDemoTest.testGroupSalesByBuyersSortedByAge(LambdaListDemoTest.java:181)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindAllBuysOfYoungestPerson(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MinOnArgument.<init>(MinOnArgument.java:18), ch.lambdaj.Lambda.selectMin(Lambda.java:484), ch.lambdaj.collection.AbstractLambdaCollection.selectMin(AbstractLambdaCollection.java:112), ch.lambdaj.demo.LambdaListDemoTest.testFindAllBuysOfYoungestPerson(LambdaListDemoTest.java:56)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:123)]"],"mutant":{"filename":"InvocationInterceptor.java","line":21,"block":1,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;Lnet\/sf\/cglib\/proxy\/MethodProxy;)Ljava\/lang\/Object;","method":"intercept","class":"ch.lambdaj.proxy.InvocationInterceptor"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest)]"],"killing":["Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testIndexCarsByBrand(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testIndexCarsByBrand(LambdaListDemoTest.java:133)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testPrintAllBrands(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testPrintAllBrands(LambdaListDemoTest.java:28)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindMostCostlySaleValue(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindMostCostlySaleValue(LambdaListDemoTest.java:72)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testFindYoungestAgeOfWhoBoughtACarForMoreThan50000(LambdaListDemoTest.java:100)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testSumSalesCostWhereBothActorsAreAMale(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.LambdaListDemoTest.testSumSalesCostWhereBothActorsAreAMale(LambdaListDemoTest.java:87)]","Description [testClass=ch.lambdaj.demo.LambdaListDemoTest, name=testExtractCarsOriginalCost(ch.lambdaj.demo.LambdaListDemoTest), assertion=ch.lambdaj.demo.Util.listsAreEqual(Util.java:33), ch.lambdaj.demo.LambdaListDemoTest.testExtractCarsOriginalCost(LambdaListDemoTest.java:124)]"],"mutant":{"filename":"ArgumentConverter.java","line":36,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.ArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
