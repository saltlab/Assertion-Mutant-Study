{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaMap.size(LambdaMap.java:190), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaMap.size(LambdaMap.java:190), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaMap.size(LambdaMap.java:190), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]"],"mutant":{"filename":"Lambda.java","line":1121,"block":138,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"map","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"Lambda.java","line":1030,"block":127,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Iterator;","method":"convertIterator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"Lambda.java","line":540,"block":75,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/aggregate\/Aggregator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"Lambda.java","line":63,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"on","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:108), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"Lambda.java","line":107,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":997,"block":121,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaMap.size(LambdaMap.java:190), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaMap.size(LambdaMap.java:190), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaMap.size(LambdaMap.java:190), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]"],"mutant":{"filename":"Lambda.java","line":1133,"block":139,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/Map;","method":"index","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"Lambda.java","line":110,"block":10,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Lambda.java","line":329,"block":33,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:153)]"],"mutant":{"filename":"Lambda.java","line":984,"block":119,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]"],"mutant":{"filename":"Lambda.java","line":1117,"block":137,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"map","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Lambda.java","line":997,"block":120,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]"],"mutant":{"filename":"Lambda.java","line":332,"block":35,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:91)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:119)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaIterable.retain(LambdaIterable.java:96), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:56)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaSet.retain(LambdaSet.java:27), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:45)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:28)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"Lambda.java","line":345,"block":40,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:153)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"Lambda.java","line":525,"block":74,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":344,"block":39,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":329,"block":34,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Lambda.java","line":344,"block":38,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"Lambda.java","line":1204,"block":145,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"having","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:331), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRemove(LambdaIterable.java:115), ch.lambdaj.collection.LambdaSet.remove(LambdaSet.java:35), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Lambda.java","line":330,"block":36,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:153)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Lambda.java","line":999,"block":122,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:91)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:119)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaIterable.retain(LambdaIterable.java:96), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:56)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaSet.retain(LambdaSet.java:27), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:45)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:28)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"Lambda.java","line":334,"block":37,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":223,"block":66,"id":{"indexes":"[43]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":225,"block":68,"id":{"indexes":"[51]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":25,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":95,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$f74190c6.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":48,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":19,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":221,"block":73,"id":{"indexes":"[93]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":219,"block":64,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":60,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":47,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":194,"block":57,"id":{"indexes":"[56]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":94,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":46,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":221,"block":73,"id":{"indexes":"[89]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2512c899.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":49,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":64,"block":8,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":219,"block":63,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":39,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":191,"block":56,"id":{"indexes":"[49]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":54,"block":6,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":63,"block":8,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":22,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":29,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":31,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":49,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":109,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":221,"block":73,"id":{"indexes":"[93]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:191), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":191,"block":55,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":190,"block":53,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":108,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2512c899.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":12,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":187,"block":50,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":52,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":225,"block":69,"id":{"indexes":"[62]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholderForUnknownClass","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":26,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":24,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":20,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":30,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"ArgumentsFactory.java","line":93,"block":17,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":92,"block":15,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":51,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":110,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":23,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":13,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":190,"block":54,"id":{"indexes":"[39]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":51,"block":5,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":107,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaSet.<init>(LambdaSet.java:20), ch.lambdaj.collection.LambdaSet.clone(LambdaSet.java:53), ch.lambdaj.collection.LambdaSet.clone(LambdaSet.java:44), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:40)]"],"mutant":{"filename":"IntrospectionUtil.java","line":164,"block":62,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"clone","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":162,"block":60,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"clone","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[21]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":115,"block":40,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":34,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":104,"block":37,"id":{"indexes":"[58]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":116,"block":41,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":42,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[52]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":38,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$ca4cc7a2.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$ca4cc7a2.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$ca4cc7a2.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$ca4cc7a2.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"Invocation.java","line":103,"block":36,"id":{"indexes":"[43]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":49,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":46,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":114,"block":39,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":45,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Invocation.java","line":45,"block":10,"id":{"indexes":"[5]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Invocation.java","line":72,"block":20,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":45,"block":11,"id":{"indexes":"[8]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":33,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[22]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.<init>(Invocation.java:32), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"Invocation.java","line":32,"block":0,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":47,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[36]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":43,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":31,"block":0,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[51]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":58,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/reflect\/Method;","method":"getInvokedMethod","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":48,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":54,"block":15,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getInvokedClass","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Invocation.java","line":72,"block":22,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$5cac702.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$5cac702.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$5cac702.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$5cac702.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"Invocation.java","line":102,"block":35,"id":{"indexes":"[28]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":25,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[38]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":117,"block":31,"id":{"indexes":"[55]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":111,"block":29,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"InvocationSequence.java","line":65,"block":10,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":115,"block":30,"id":{"indexes":"[42]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":102,"block":24,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":121,"block":33,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"InvocationSequence.java","line":131,"block":35,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$26f75bef.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$26f75bef.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$26f75bef.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$26f75bef.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"InvocationSequence.java","line":69,"block":13,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getRootInvokedClass","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":7,"id":{"indexes":"[35]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"InvocationSequence.java","line":141,"block":40,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":140,"block":39,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":26,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":22,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":139,"block":38,"id":{"indexes":"[6]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":64,"block":9,"id":{"indexes":"[45]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":23,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"InvocationSequence.java","line":121,"block":32,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"InvocationSequence.java","line":113,"block":30,"id":{"indexes":"[50]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"InvocationSequence.java","line":139,"block":37,"id":{"indexes":"[4]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"InvocationSequence.java","line":135,"block":36,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyUtil.java","line":75,"block":26,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":19,"id":{"indexes":"[116]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":21,"id":{"indexes":"[131]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":101,"block":38,"id":{"indexes":"[10]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyUtil.java","line":76,"block":28,"id":{"indexes":"[21]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":6,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":14,"id":{"indexes":"[77]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":15,"id":{"indexes":"[84]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c2e68d89.setLastName(<generated>), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyUtil.java","line":75,"block":27,"id":{"indexes":"[7]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":49,"block":12,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":102,"block":39,"id":{"indexes":"[14]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":91,"block":32,"id":{"indexes":"[16]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyUtil.java","line":81,"block":31,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":46,"block":8,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ProxyUtil.java","line":101,"block":36,"id":{"indexes":"[4]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":17,"id":{"indexes":"[99]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ProxyUtil.java","line":101,"block":37,"id":{"indexes":"[7]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":48,"block":10,"id":{"indexes":"[34]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":34,"id":{"indexes":"[26]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":18,"id":{"indexes":"[106]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyUtil.java","line":80,"block":29,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":11,"id":{"indexes":"[49]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":80,"block":30,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ProxyUtil.java","line":102,"block":41,"id":{"indexes":"[20]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":32,"id":{"indexes":"[20]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":102,"block":40,"id":{"indexes":"[17]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ProxyUtil.java","line":97,"block":35,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/ClassLoader;Ljava\/lang\/reflect\/InvocationHandler;[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createNativeJavaProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":90,"block":32,"id":{"indexes":"[11]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyUtil.java","line":93,"block":34,"id":{"indexes":"[30]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"LambdaIterable.java","line":101,"block":8,"id":{"indexes":"[8]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)V","method":"doRetain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:252)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]"],"mutant":{"filename":"LambdaIterable.java","line":252,"block":36,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/util\/Collection;)Ljava\/lang\/Iterable;","method":"innerClone","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]"],"mutant":{"filename":"LambdaIterable.java","line":115,"block":10,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)V","method":"doRemove","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:188), ch.lambdaj.collection.LambdaList.clone(LambdaList.java:179), ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:251)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaIterable.clone(LambdaIterable.java:245), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:56)]"],"mutant":{"filename":"LambdaIterable.java","line":253,"block":37,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/util\/Collection;)Ljava\/lang\/Iterable;","method":"innerClone","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterateAfterModifyCollection(LambdaListTest.java:275)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:59), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:59), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:38)]"],"mutant":{"filename":"LambdaIterable.java","line":34,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaIterator;","method":"iterator","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]"],"mutant":{"filename":"LambdaIterable.java","line":97,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"retain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]"],"mutant":{"filename":"LambdaIterable.java","line":96,"block":7,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"retain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaSet.<init>(LambdaSet.java:20), ch.lambdaj.collection.LambdaSet.clone(LambdaSet.java:53), ch.lambdaj.collection.LambdaSet.clone(LambdaSet.java:44), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:40)]"],"mutant":{"filename":"LambdaIterable.java","line":250,"block":34,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/util\/Collection;)Ljava\/lang\/Iterable;","method":"innerClone","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:56)]"],"mutant":{"filename":"LambdaIterable.java","line":245,"block":33,"id":{"indexes":"[11]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaIterable;","method":"clone","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":239,"block":38,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.equals(AbstractLambdaCollection.java:239), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:57)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.hashCode(AbstractLambdaCollection.java:247), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.AbstractLambdaCollection.equals(AbstractLambdaCollection.java:239), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.hashCode(AbstractLambdaCollection.java:247), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.AbstractLambdaCollection.equals(AbstractLambdaCollection.java:239), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":52,"block":10,"id":{"indexes":"[13]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:153)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":130,"block":21,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":76,"block":15,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:176), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:176), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:185), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:185), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:167), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:167), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":183,"block":26,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaMap;","method":"map","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:57)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":239,"block":40,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":36,"block":4,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:53), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":56,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"getInnerIterator","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:107), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":56,"block":13,"id":{"indexes":"[14]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"getInnerIterator","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":141,"block":22,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":35,"block":3,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":52,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":35,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":44,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Collection;)V","method":"setInnerCollection","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":152,"block":23,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":247,"block":41,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaList.remove(LambdaList.java:157), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:228)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"LambdaCollection.java","line":201,"block":24,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"size","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"LambdaCollection.java","line":138,"block":15,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"add","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.addAll(LambdaCollection.java:145), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:225)]"],"mutant":{"filename":"LambdaCollection.java","line":208,"block":25,"id":{"indexes":"[6]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"toArray","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:223), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:226), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:229), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:234)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:223), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:226), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:229), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:234)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:223), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:226), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:229), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:234)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:223), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:226), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:229), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:234)]"],"mutant":{"filename":"LambdaCollection.java","line":152,"block":17,"id":{"indexes":"[5]","location":{"mdesc":"()V","method":"clear","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"LambdaCollection.java","line":145,"block":16,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/util\/Collection;)Z","method":"addAll","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.add(LambdaCollection.java:138), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:217)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"LambdaCollection.java","line":27,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"innerCollection","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]"],"mutant":{"filename":"LambdaMap.java","line":190,"block":26,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"size","class":"ch.lambdaj.collection.LambdaMap"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:252)]"],"mutant":{"filename":"LambdaList.java","line":179,"block":21,"id":{"indexes":"[8]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaList;","method":"clone","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"LambdaList.java","line":157,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(I)Ljava\/lang\/Object;","method":"remove","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"LambdaList.java","line":164,"block":19,"id":{"indexes":"[8]","location":{"mdesc":"(ILjava\/lang\/Object;)Ljava\/lang\/Object;","method":"set","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:220)]"],"mutant":{"filename":"LambdaList.java","line":136,"block":15,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)I","method":"lastIndexOf","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:231), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:236)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:231), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:236)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:231), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:236)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]"],"mutant":{"filename":"LambdaList.java","line":122,"block":13,"id":{"indexes":"[7]","location":{"mdesc":"(I)Ljava\/lang\/Object;","method":"get","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:242)]"],"mutant":{"filename":"LambdaList.java","line":150,"block":17,"id":{"indexes":"[7]","location":{"mdesc":"(I)Ljava\/util\/ListIterator;","method":"listIterator","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaList.add(LambdaList.java:108), ch.lambdaj.collection.LambdaListTest.testIterateAfterModifyCollection(LambdaListTest.java:274)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaList.listIterator(LambdaList.java:143), ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:252)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaList.subList(LambdaList.java:171), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:207)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaList.add(LambdaList.java:108), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:289)]"],"mutant":{"filename":"LambdaList.java","line":26,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/List;","method":"innerList","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterateAfterModifyCollection(LambdaListTest.java:275)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:211), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:215), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:218), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:220)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:211), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:215), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:218), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:220)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:211), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:215), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:218), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:220)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:211), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:215), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:218), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:220)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:211), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:213), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:215), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:218), ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:220)]"],"mutant":{"filename":"LambdaList.java","line":108,"block":11,"id":{"indexes":"[7]","location":{"mdesc":"(ILjava\/lang\/Object;)V","method":"add","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:92), ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:92), ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:126), ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:126), ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:29), ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:29), ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:111), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:111), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"LambdaList.java","line":34,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"retain","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:252)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:239)]"],"mutant":{"filename":"LambdaList.java","line":143,"block":16,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/ListIterator;","method":"listIterator","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:94)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:31)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"LambdaList.java","line":33,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"retain","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:210)]"],"mutant":{"filename":"LambdaList.java","line":171,"block":20,"id":{"indexes":"[11]","location":{"mdesc":"(II)Lch\/lambdaj\/collection\/LambdaList;","method":"subList","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:252)]"],"mutant":{"filename":"LambdaList.java","line":188,"block":22,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/util\/List;)Lch\/lambdaj\/collection\/LambdaList;","method":"clone","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:215)]"],"mutant":{"filename":"LambdaList.java","line":129,"block":14,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)I","method":"indexOf","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":69,"block":21,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":49,"block":8,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"IteratorFactory.java","line":70,"block":23,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"IteratorFactory.java","line":70,"block":22,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"IteratorFactory.java","line":49,"block":7,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:69), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"IteratorFactory.java","line":69,"block":20,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:153)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.map(Lambda.java:1116), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.map(Lambda.java:1116), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.map(Lambda.java:1116), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"IteratorFactory.java","line":50,"block":9,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":68,"block":19,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.map(Lambda.java:1117), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.map(Lambda.java:1117), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.map(Lambda.java:1117), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"IteratorFactory.java","line":50,"block":10,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"IteratorFactory.java","line":68,"block":18,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"IteratorFactory.java","line":51,"block":11,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"IteratorFactory.java","line":51,"block":12,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":51,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]"],"mutant":{"filename":"ProxyIterator.java","line":39,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]"],"mutant":{"filename":"ProxyIterator.java","line":40,"block":3,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]"],"mutant":{"filename":"ProxyIterator.java","line":55,"block":15,"id":{"indexes":"[83]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":92,"block":18,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":71,"block":16,"id":{"indexes":"[90]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":52,"block":8,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6a50659.setLastName(<generated>), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyIterator.java","line":40,"block":4,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":53,"block":8,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyIterator.java","line":81,"block":17,"id":{"indexes":"[9]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ProxyIterator.java","line":93,"block":18,"id":{"indexes":"[15]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]"],"mutant":{"filename":"ProxyIterator.java","line":51,"block":6,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":39,"block":2,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"Argument.java","line":41,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.Argument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Concat.java","line":46,"block":7,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Concat.java","line":40,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Concat.java","line":42,"block":9,"id":{"indexes":"[51]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:52), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.Lambda.join(Lambda.java:984), ch.lambdaj.collection.AbstractLambdaCollection.join(AbstractLambdaCollection.java:130), ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:145)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:52), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.Lambda.join(Lambda.java:984), ch.lambdaj.collection.AbstractLambdaCollection.join(AbstractLambdaCollection.java:130), ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Concat.java","line":51,"block":14,"id":{"indexes":"[88]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:153)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Concat.java","line":57,"block":15,"id":{"indexes":"[93]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:45), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.Lambda.join(Lambda.java:984), ch.lambdaj.collection.AbstractLambdaCollection.join(AbstractLambdaCollection.java:130), ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:145)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:45), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.Lambda.join(Lambda.java:984), ch.lambdaj.collection.AbstractLambdaCollection.join(AbstractLambdaCollection.java:130), ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:45), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.collection.AbstractLambdaCollection.join(AbstractLambdaCollection.java:141), ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:159)]"],"mutant":{"filename":"Concat.java","line":44,"block":5,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:160)]"],"mutant":{"filename":"Concat.java","line":55,"block":13,"id":{"indexes":"[76]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Concat.java","line":40,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.collection.AbstractLambdaCollection.join(AbstractLambdaCollection.java:141), ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:159)]"],"mutant":{"filename":"Concat.java","line":53,"block":11,"id":{"indexes":"[63]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:57), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":52,"block":8,"id":{"indexes":"[16]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$8ca9d287.setLastName(<generated>), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$9ca2bd4e.setLastName(<generated>), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":51,"block":7,"id":{"indexes":"[10]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:291)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":5,"id":{"indexes":"[15]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:51), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":51,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":55,"block":9,"id":{"indexes":"[33]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$53af656a.setLastName(<generated>), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":36,"block":1,"id":{"indexes":"[13]","location":{"mdesc":"()V","method":"reset","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testList(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testList(LambdaListTest.java:207)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:38)]"],"mutant":{"filename":"LambdaCollections.java","line":43,"block":3,"id":{"indexes":"[11]","location":{"mdesc":"([Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:40)]"],"mutant":{"filename":"LambdaCollections.java","line":79,"block":7,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/util\/Set;)Lch\/lambdaj\/collection\/LambdaSet;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:56)]"],"mutant":{"filename":"LambdaCollections.java","line":61,"block":5,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test2(LambdaListTest.java:91)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull1(LambdaListTest.java:145)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull2(LambdaListTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterateAfterModifyCollection(LambdaListTest.java:274)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testConcatNull3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testConcatNull3(LambdaListTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testNonCloneableMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testNonCloneableMap(LambdaListTest.java:251)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testPredicate(LambdaListTest.java:119)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:289)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test1(LambdaListTest.java:28)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"LambdaCollections.java","line":34,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/util\/List;)Lch\/lambdaj\/collection\/LambdaList;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"HasArgumentWithValue.java","line":33,"block":3,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:113)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":31,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":70,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"havingValue","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"HasArgumentWithValue.java","line":31,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"LambdaSet.java","line":36,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaSet;","method":"remove","class":"ch.lambdaj.collection.LambdaSet"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]"],"mutant":{"filename":"LambdaSet.java","line":53,"block":4,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/util\/Set;)Lch\/lambdaj\/collection\/LambdaSet;","method":"clone","class":"ch.lambdaj.collection.LambdaSet"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]"],"mutant":{"filename":"LambdaSet.java","line":35,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaSet;","method":"remove","class":"ch.lambdaj.collection.LambdaSet"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:41), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:43)]"],"mutant":{"filename":"LambdaSet.java","line":44,"block":3,"id":{"indexes":"[8]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaSet;","method":"clone","class":"ch.lambdaj.collection.LambdaSet"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"LambdaSet.java","line":28,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaSet;","method":"retain","class":"ch.lambdaj.collection.LambdaSet"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]"],"mutant":{"filename":"LambdaSet.java","line":27,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaSet;","method":"retain","class":"ch.lambdaj.collection.LambdaSet"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterateAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterateAfterModifyCollection(LambdaListTest.java:275)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:59), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testIterable(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:59), ch.lambdaj.collection.LambdaListTest.testIterable(LambdaListTest.java:61)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]"],"mutant":{"filename":"LambdaIterator.java","line":68,"block":5,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.collection.LambdaIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testSet(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:46), ch.lambdaj.collection.LambdaListTest.testSet(LambdaListTest.java:49)]"],"mutant":{"filename":"LambdaIterator.java","line":61,"block":4,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.collection.LambdaIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":33,"block":4,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6959e585.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6959e585.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6959e585.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), com.sun.proxy.$Proxy4.getPremium(Unknown Source), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6959e585.getAge(<generated>), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyArgument.java","line":33,"block":3,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.hashCode(Unknown Source), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":2,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6959e585.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6959e585.getFirstName(<generated>), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=com.sun.proxy.$Proxy4.equals(Unknown Source), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"ProxyArgument.java","line":36,"block":5,"id":{"indexes":"[47]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"ConverterIterator.java","line":30,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.function.convert.ConverterIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ConverterIterator.java","line":37,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.function.convert.ConverterIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"PairAggregator.java","line":24,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"PairAggregator.java","line":24,"block":3,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:139)]"],"mutant":{"filename":"PairAggregator.java","line":25,"block":4,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":25,"block":0,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"<init>","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Predicate.java","line":33,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matchesSafely","class":"ch.lambdaj.function.matcher.Predicate$InnerMatcher"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testPredicate(ch.lambdaj.collection.LambdaListTest)]"],"killing":[],"mutant":{"filename":"Predicate.java","line":24,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.Predicate"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:184)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.map(AbstractLambdaCollection.java:183), ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testForEachAfterModifyCollection(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$7124f651.setLastName(<generated>), ch.lambdaj.collection.LambdaListTest.testForEachAfterModifyCollection(LambdaListTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test3(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaListTest.test3(LambdaListTest.java:110)]"],"mutant":{"filename":"InvocationInterceptor.java","line":21,"block":1,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;Lnet\/sf\/cglib\/proxy\/MethodProxy;)Ljava\/lang\/Object;","method":"intercept","class":"ch.lambdaj.proxy.InvocationInterceptor"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap1(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap1(LambdaListTest.java:178)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap2(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap2(LambdaListTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=testMap(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.collection.LambdaListTest.testMap(LambdaListTest.java:169)]","Description [testClass=ch.lambdaj.collection.LambdaListTest, name=test4(ch.lambdaj.collection.LambdaListTest), assertion=ch.lambdaj.function.aggregate.Money.sum(Money.java:71), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:78), ch.lambdaj.function.aggregate.Money$MoneyAggregator.aggregate(Money.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.aggregate(Lambda.java:540), ch.lambdaj.collection.AbstractLambdaCollection.aggregate(AbstractLambdaCollection.java:76), ch.lambdaj.collection.LambdaListTest.test4(LambdaListTest.java:138)]"],"mutant":{"filename":"ArgumentConverter.java","line":36,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.ArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
