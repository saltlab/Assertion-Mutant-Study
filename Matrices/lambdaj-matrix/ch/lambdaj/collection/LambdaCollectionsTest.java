{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convertMap(Lambda.java:1042), ch.lambdaj.Lambda.convertMap(Lambda.java:1054), ch.lambdaj.collection.LambdaMap.convertValues(LambdaMap.java:47), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]"],"mutant":{"filename":"Lambda.java","line":1121,"block":138,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"map","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.collection.LambdaIterable.doConvert(LambdaIterable.java:157), ch.lambdaj.collection.LambdaList.convert(LambdaList.java:66), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:162)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"Lambda.java","line":1030,"block":127,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Iterator;","method":"convertIterator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]"],"mutant":{"filename":"Lambda.java","line":413,"block":54,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectFirst","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.typedSum(Lambda.java:604), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"Lambda.java","line":604,"block":80,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"Lambda.java","line":63,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"on","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]"],"mutant":{"filename":"Lambda.java","line":249,"block":21,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;I)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:108), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:108), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:108), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"Lambda.java","line":107,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":997,"block":121,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"Lambda.java","line":1017,"block":125,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/List;","method":"convert","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]"],"mutant":{"filename":"Lambda.java","line":606,"block":82,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"Lambda.java","line":504,"block":68,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/aggregate\/Aggregator;","method":"getSumAggregator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:312)]"],"mutant":{"filename":"Lambda.java","line":388,"block":47,"id":{"indexes":"[34]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectUnique","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.convertMap(Lambda.java:1042), ch.lambdaj.Lambda.convertMap(Lambda.java:1054), ch.lambdaj.collection.LambdaMap.convertValues(LambdaMap.java:47), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]"],"mutant":{"filename":"Lambda.java","line":1133,"block":139,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/Map;","method":"index","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"Lambda.java","line":573,"block":77,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Ljava\/lang\/Class;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregateFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"Lambda.java","line":484,"block":65,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMin","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.MatchingIterator.next(MatchingIterator.java:55), ch.lambdaj.Lambda.selectUnique(Lambda.java:386), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"Lambda.java","line":385,"block":43,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectUnique","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]"],"mutant":{"filename":"Lambda.java","line":264,"block":24,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"Lambda.java","line":110,"block":10,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.convert(LambdaList.java:66), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:162)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"Lambda.java","line":1018,"block":126,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/List;","method":"convert","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectUnique(Lambda.java:387), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:311)]"],"mutant":{"filename":"Lambda.java","line":387,"block":45,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectUnique","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]"],"mutant":{"filename":"Lambda.java","line":856,"block":113,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"maxFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]"],"mutant":{"filename":"Lambda.java","line":1043,"block":130,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/util\/Map;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"convertMap","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]"],"mutant":{"filename":"Lambda.java","line":1042,"block":129,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/util\/Map;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"convertMap","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"Lambda.java","line":606,"block":84,"id":{"indexes":"[30]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Lambda.java","line":637,"block":96,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"sumFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]"],"mutant":{"filename":"Lambda.java","line":329,"block":33,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]"],"mutant":{"filename":"Lambda.java","line":984,"block":119,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]"],"mutant":{"filename":"Lambda.java","line":458,"block":59,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/Collection;","method":"selectDistinctArgument","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]"],"mutant":{"filename":"Lambda.java","line":236,"block":20,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]"],"mutant":{"filename":"Lambda.java","line":265,"block":24,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"Lambda.java","line":1148,"block":140,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;[Ljava\/lang\/Object;)Ljava\/util\/List;","method":"project","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]"],"mutant":{"filename":"Lambda.java","line":1117,"block":137,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/Map;","method":"map","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]"],"mutant":{"filename":"Lambda.java","line":415,"block":53,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectFirst","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":604,"block":81,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Number;","method":"typedSum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]"],"mutant":{"filename":"Lambda.java","line":997,"block":120,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"Lambda.java","line":902,"block":115,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"joinFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.sort(Lambda.java:263), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:144), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:58), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:104)]"],"mutant":{"filename":"Lambda.java","line":263,"block":23,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/List;","method":"sort","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"Lambda.java","line":600,"block":79,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"sum","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]"],"mutant":{"filename":"Lambda.java","line":332,"block":35,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRemove(LambdaIterable.java:115), ch.lambdaj.collection.LambdaList.remove(LambdaList.java:41), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:182)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:324)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:85)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]"],"mutant":{"filename":"Lambda.java","line":345,"block":40,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"Lambda.java","line":470,"block":60,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/Collection;","method":"selectDistinct","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]"],"mutant":{"filename":"Lambda.java","line":472,"block":64,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/Collection;","method":"selectDistinct","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:355)]"],"mutant":{"filename":"Lambda.java","line":925,"block":116,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Iterable;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"joinFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"Lambda.java","line":525,"block":74,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136)]"],"mutant":{"filename":"Lambda.java","line":496,"block":66,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMax","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectUnique(Lambda.java:385), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"Lambda.java","line":385,"block":44,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectUnique","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:417), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:417), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]"],"mutant":{"filename":"Lambda.java","line":417,"block":55,"id":{"indexes":"[30]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectFirst","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:280), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:280), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]"],"mutant":{"filename":"Lambda.java","line":415,"block":52,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"selectFirst","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"Lambda.java","line":471,"block":63,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/util\/Collection;","method":"selectDistinct","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":344,"block":39,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":329,"block":34,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:162)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"Lambda.java","line":1066,"block":132,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/List;","method":"extract","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"Lambda.java","line":556,"block":76,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lch\/lambdaj\/function\/aggregate\/Aggregator;)Ljava\/lang\/Object;","method":"aggregateFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]"],"mutant":{"filename":"Lambda.java","line":344,"block":38,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Iterable;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239)]"],"mutant":{"filename":"Lambda.java","line":784,"block":109,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;","method":"minFrom","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.MatchingIterator.searchNext(MatchingIterator.java:38), ch.lambdaj.util.iterator.MatchingIterator.hasNext(MatchingIterator.java:47), ch.lambdaj.Lambda.selectUnique(Lambda.java:385), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.all(AbstractLambdaCollection.java:211), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"Lambda.java","line":1204,"block":145,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"having","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]"],"mutant":{"filename":"Lambda.java","line":330,"block":36,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Lambda.java","line":504,"block":67,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/aggregate\/Aggregator;","method":"getSumAggregator","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaMap.get(LambdaMap.java:141), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]"],"mutant":{"filename":"Lambda.java","line":1054,"block":131,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/Map;Ljava\/lang\/Object;)Ljava\/util\/Map;","method":"convertMap","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]"],"mutant":{"filename":"Lambda.java","line":999,"block":122,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRemove(LambdaIterable.java:115), ch.lambdaj.collection.LambdaList.remove(LambdaList.java:41), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:182)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:324)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:85)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.setInner(AbstractLambdaCollection.java:39), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]"],"mutant":{"filename":"Lambda.java","line":334,"block":37,"id":{"indexes":"[36]","location":{"mdesc":"(Ljava\/util\/Iterator;Lorg\/hamcrest\/Matcher;)Ljava\/util\/List;","method":"select","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":25,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":95,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$37e60d6d.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$2104b7b3.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":48,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":19,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":60,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$f3e1945c.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$f3e1945c.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$dd003ea2.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$f3e1945c.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":47,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":94,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":46,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$186c4a7c.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$18af4c2.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":49,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":64,"block":8,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":39,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$b7ae803f.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$b7ae803f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$a0cd2a85.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$b7ae803f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":54,"block":6,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":63,"block":8,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":22,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":29,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":31,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":49,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":109,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":108,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$37e60d6d.getBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$37e60d6d.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":12,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":187,"block":50,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":52,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":26,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":24,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":20,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":30,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:54), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"ArgumentsFactory.java","line":93,"block":17,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":92,"block":15,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":51,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":110,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":23,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":13,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:369)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":51,"block":5,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":107,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":10,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]"],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":37,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]"],"mutant":{"filename":"IntrospectionUtil.java","line":45,"block":13,"id":{"indexes":"[76]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]"],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":11,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.IntrospectionUtil.getPropertyValue(IntrospectionUtil.java:39), ch.lambdaj.function.convert.PropertyExtractor.convert(PropertyExtractor.java:30), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.collection.LambdaIterable.doConvert(LambdaIterable.java:157), ch.lambdaj.collection.LambdaList.convert(LambdaList.java:66), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]"],"mutant":{"filename":"IntrospectionUtil.java","line":39,"block":10,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]"],"mutant":{"filename":"IntrospectionUtil.java","line":43,"block":12,"id":{"indexes":"[66]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]"],"mutant":{"filename":"IntrospectionUtil.java","line":37,"block":8,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":51,"block":14,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getBooleanPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]"],"mutant":{"filename":"IntrospectionUtil.java","line":53,"block":15,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getBooleanPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]"],"mutant":{"filename":"IntrospectionUtil.java","line":59,"block":16,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"getPlainPropertyValue","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[21]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":115,"block":40,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":34,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":104,"block":37,"id":{"indexes":"[58]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":116,"block":41,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":42,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[52]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":38,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$f09d9de8.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$f09d9de8.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$77ef3a2.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"Invocation.java","line":103,"block":36,"id":{"indexes":"[43]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":49,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":46,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":114,"block":39,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":45,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:54), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:140), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"Invocation.java","line":45,"block":10,"id":{"indexes":"[5]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"Invocation.java","line":72,"block":20,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":45,"block":11,"id":{"indexes":"[8]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":33,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[22]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":0,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":47,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[36]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":43,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":31,"block":0,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[51]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":58,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/reflect\/Method;","method":"getInvokedMethod","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":48,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":54,"block":15,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getInvokedClass","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"Invocation.java","line":72,"block":22,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$2abbea50.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$2abbea50.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$419d400a.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"Invocation.java","line":102,"block":35,"id":{"indexes":"[28]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":25,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[38]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":117,"block":31,"id":{"indexes":"[55]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":111,"block":29,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:54), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"InvocationSequence.java","line":65,"block":10,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":115,"block":30,"id":{"indexes":"[42]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":102,"block":24,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":121,"block":33,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"InvocationSequence.java","line":131,"block":35,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$bf54b665.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$bf54b665.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d6360c1f.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"InvocationSequence.java","line":69,"block":13,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getRootInvokedClass","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":7,"id":{"indexes":"[35]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"InvocationSequence.java","line":141,"block":40,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]"],"mutant":{"filename":"InvocationSequence.java","line":140,"block":39,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":26,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":22,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":139,"block":38,"id":{"indexes":"[6]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":64,"block":9,"id":{"indexes":"[45]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":23,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.Lambda.map(Lambda.java:1119), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:34), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:54), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.function.convert.ArgumentConverter.convert(ArgumentConverter.java:36), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"InvocationSequence.java","line":121,"block":32,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"InvocationSequence.java","line":113,"block":30,"id":{"indexes":"[50]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.MaxOnArgument.chooseOnArgument(MaxOnArgument.java:32), ch.lambdaj.function.aggregate.ChooserOnArgument.choose(ChooserOnArgument.java:38), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator.compare(ComparatorUtil.java:55), ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator.compare(ComparatorUtil.java:55), ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.getSumAggregator(Lambda.java:507), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"InvocationSequence.java","line":139,"block":37,"id":{"indexes":"[4]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"InvocationSequence.java","line":135,"block":36,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyUtil.java","line":75,"block":26,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":19,"id":{"indexes":"[116]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.manageUnproxableClass(ProxyUtil.java:61), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:53), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":51,"block":13,"id":{"indexes":"[64]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":21,"id":{"indexes":"[131]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":101,"block":38,"id":{"indexes":"[10]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:51), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":105,"block":42,"id":{"indexes":"[48]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyUtil.java","line":76,"block":28,"id":{"indexes":"[21]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":6,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:51), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":106,"block":42,"id":{"indexes":"[52]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":45,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":14,"id":{"indexes":"[77]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":15,"id":{"indexes":"[84]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), com.sun.proxy.$Proxy5.setLastName(Unknown Source), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c23564fa.setLastName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c23564fa.setBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyUtil.java","line":75,"block":27,"id":{"indexes":"[7]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createIterableProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:51), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":104,"block":42,"id":{"indexes":"[38]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":49,"block":12,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.concatClasses(ProxyUtil.java:104), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:51), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":103,"block":42,"id":{"indexes":"[27]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":102,"block":39,"id":{"indexes":"[14]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":91,"block":32,"id":{"indexes":"[16]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyUtil.java","line":81,"block":31,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":46,"block":8,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":101,"block":36,"id":{"indexes":"[4]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":17,"id":{"indexes":"[99]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":101,"block":37,"id":{"indexes":"[7]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":48,"block":10,"id":{"indexes":"[34]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":34,"id":{"indexes":"[26]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":18,"id":{"indexes":"[106]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyUtil.java","line":80,"block":29,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":11,"id":{"indexes":"[49]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":80,"block":30,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Class;","method":"normalizeProxiedClass","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":102,"block":41,"id":{"indexes":"[20]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":32,"id":{"indexes":"[20]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":102,"block":40,"id":{"indexes":"[17]","location":{"mdesc":"([Ljava\/lang\/Class;[Ljava\/lang\/Class;)[Ljava\/lang\/Class;","method":"concatClasses","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]"],"mutant":{"filename":"ProxyUtil.java","line":97,"block":35,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/ClassLoader;Ljava\/lang\/reflect\/InvocationHandler;[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createNativeJavaProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":90,"block":32,"id":{"indexes":"[11]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:76), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:81), ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyUtil.java","line":93,"block":34,"id":{"indexes":"[30]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239)]"],"mutant":{"filename":"LambdaIterable.java","line":87,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"minFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinct(LambdaCollectionsTest.java:176)]"],"mutant":{"filename":"LambdaIterable.java","line":197,"block":27,"id":{"indexes":"[34]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaSet;","method":"distinct","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"LambdaIterable.java","line":223,"block":30,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"project","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]"],"mutant":{"filename":"LambdaIterable.java","line":101,"block":8,"id":{"indexes":"[8]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)V","method":"doRetain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.convert(LambdaList.java:66), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]"],"mutant":{"filename":"LambdaIterable.java","line":157,"block":16,"id":{"indexes":"[7]","location":{"mdesc":"(Lch\/lambdaj\/function\/convert\/Converter;)Ljava\/util\/List;","method":"doConvert","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]"],"mutant":{"filename":"LambdaIterable.java","line":186,"block":23,"id":{"indexes":"[35]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)V","method":"doReplace","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]"],"mutant":{"filename":"LambdaIterable.java","line":115,"block":10,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)V","method":"doRemove","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"LambdaIterable.java","line":211,"block":29,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"doDistinct","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinct(LambdaCollectionsTest.java:176)]"],"mutant":{"filename":"LambdaIterable.java","line":196,"block":26,"id":{"indexes":"[27]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaSet;","method":"distinct","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:162)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"LambdaIterable.java","line":170,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/List;","method":"doExtract","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]"],"mutant":{"filename":"LambdaIterable.java","line":180,"block":19,"id":{"indexes":"[6]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"replace","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"LambdaIterable.java","line":227,"block":31,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)Ljava\/util\/List;","method":"doProject","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"LambdaIterable.java","line":207,"block":28,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"distinct","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]"],"mutant":{"filename":"LambdaIterable.java","line":187,"block":24,"id":{"indexes":"[40]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)V","method":"doReplace","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]"],"mutant":{"filename":"LambdaIterable.java","line":153,"block":15,"id":{"indexes":"[9]","location":{"mdesc":"(Lch\/lambdaj\/function\/convert\/Converter;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"convert","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]"],"mutant":{"filename":"LambdaIterable.java","line":129,"block":12,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"doSort","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:355)]"],"mutant":{"filename":"LambdaIterable.java","line":57,"block":3,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/lang\/Object;","method":"joinFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.core.AllOf.matches(AllOf.java:27), org.hamcrest.DiagnosingMatcher.matches(DiagnosingMatcher.java:12), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:24), org.hamcrest.core.IsCollectionContaining.matchesSafely(IsCollectionContaining.java:14), org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"LambdaIterable.java","line":34,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaIterator;","method":"iterator","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]"],"mutant":{"filename":"LambdaIterable.java","line":77,"block":5,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"maxFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]"],"mutant":{"filename":"LambdaIterable.java","line":124,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"sort","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]"],"mutant":{"filename":"LambdaIterable.java","line":144,"block":14,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;I)V","method":"doSort","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"LambdaIterable.java","line":45,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"joinFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]"],"mutant":{"filename":"LambdaIterable.java","line":97,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"retain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"LambdaIterable.java","line":166,"block":17,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"extract","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]"],"mutant":{"filename":"LambdaIterable.java","line":125,"block":11,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"sort","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"LambdaIterable.java","line":206,"block":28,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"distinct","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]"],"mutant":{"filename":"LambdaIterable.java","line":181,"block":19,"id":{"indexes":"[10]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"replace","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]"],"mutant":{"filename":"LambdaIterable.java","line":110,"block":9,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"remove","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"LambdaIterable.java","line":96,"block":7,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"retain","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]"],"mutant":{"filename":"LambdaIterable.java","line":111,"block":9,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"remove","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"LambdaIterable.java","line":67,"block":4,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"sumFrom","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]"],"mutant":{"filename":"LambdaIterable.java","line":186,"block":21,"id":{"indexes":"[24]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)V","method":"doReplace","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":201,"block":29,"id":{"indexes":"[8]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"exists","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":201,"block":30,"id":{"indexes":"[11]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"exists","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:301)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":212,"block":35,"id":{"indexes":"[24]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"all","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":52,"block":10,"id":{"indexes":"[13]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":231,"block":37,"id":{"indexes":"[7]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"unique","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":130,"block":21,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/String;","method":"join","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":211,"block":33,"id":{"indexes":"[16]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"all","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":221,"block":36,"id":{"indexes":"[7]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Ljava\/lang\/Object;","method":"first","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":192,"block":27,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaMap;","method":"index","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":211,"block":34,"id":{"indexes":"[20]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"all","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":36,"block":4,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":56,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"getInnerIterator","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":201,"block":28,"id":{"indexes":"[6]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"exists","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:301)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":211,"block":32,"id":{"indexes":"[14]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Z","method":"all","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":112,"block":19,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMin","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:107), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:107), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:107), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.all(AbstractLambdaCollection.java:211), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299), ch.lambdaj.collection.AbstractLambdaCollection.all(AbstractLambdaCollection.java:211), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:301)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.all(AbstractLambdaCollection.java:211), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299), ch.lambdaj.collection.AbstractLambdaCollection.all(AbstractLambdaCollection.java:211), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:301)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":56,"block":13,"id":{"indexes":"[14]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"getInnerIterator","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":35,"block":3,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":52,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"AbstractLambdaCollection.java","line":35,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"setInner","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":44,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Collection;)V","method":"setInnerCollection","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":103,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"sum","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":152,"block":23,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"forEach","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136)]"],"mutant":{"filename":"AbstractLambdaCollection.java","line":121,"block":20,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"selectMax","class":"ch.lambdaj.collection.AbstractLambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:46), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6faa7ff1.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Sum.java","line":39,"block":6,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":37,"block":5,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Sum.java","line":50,"block":19,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Integer;)Ljava\/lang\/Integer;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Sum.java","line":50,"block":21,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Integer;)Ljava\/lang\/Integer;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Sum.java","line":39,"block":7,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Sum.java","line":50,"block":21,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Integer;)Ljava\/lang\/Integer;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Sum.java","line":37,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]"],"mutant":{"filename":"Sum.java","line":37,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Number;Ljava\/lang\/Number;)Ljava\/lang\/Number;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Sum"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]"],"mutant":{"filename":"LambdaCollection.java","line":126,"block":13,"id":{"indexes":"[35]","location":{"mdesc":"(Ljava\/lang\/Class;)[Ljava\/lang\/Object;","method":"toArray","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"LambdaCollection.java","line":97,"block":9,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"distinct","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]"],"mutant":{"filename":"LambdaCollection.java","line":53,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"sort","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163)]"],"mutant":{"filename":"LambdaCollection.java","line":159,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"contains","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]"],"mutant":{"filename":"LambdaCollection.java","line":35,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"retain","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinct(LambdaCollectionsTest.java:176)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"LambdaCollection.java","line":201,"block":24,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"size","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.toArray(LambdaCollection.java:126), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:117)]"],"mutant":{"filename":"LambdaCollection.java","line":126,"block":13,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Class;)[Ljava\/lang\/Object;","method":"toArray","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392)]"],"mutant":{"filename":"LambdaCollection.java","line":71,"block":6,"id":{"indexes":"[9]","location":{"mdesc":"(Lch\/lambdaj\/function\/convert\/Converter;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"convert","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333)]"],"mutant":{"filename":"LambdaCollection.java","line":36,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"retain","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124)]"],"mutant":{"filename":"LambdaCollection.java","line":127,"block":14,"id":{"indexes":"[39]","location":{"mdesc":"(Ljava\/lang\/Class;)[Ljava\/lang\/Object;","method":"toArray","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209)]"],"mutant":{"filename":"LambdaCollection.java","line":87,"block":8,"id":{"indexes":"[6]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"replace","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]"],"mutant":{"filename":"LambdaCollection.java","line":44,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"remove","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]"],"mutant":{"filename":"LambdaCollection.java","line":45,"block":3,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"remove","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209)]"],"mutant":{"filename":"LambdaCollection.java","line":88,"block":8,"id":{"indexes":"[10]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"replace","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"LambdaCollection.java","line":96,"block":9,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"distinct","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"LambdaCollection.java","line":105,"block":10,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"project","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinct(LambdaCollectionsTest.java:176)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:188), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:190)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:331)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.toArray(LambdaCollection.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:117)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:222)]"],"mutant":{"filename":"LambdaCollection.java","line":27,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"innerCollection","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372)]"],"mutant":{"filename":"LambdaCollection.java","line":79,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"extract","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:117)]"],"mutant":{"filename":"LambdaCollection.java","line":54,"block":4,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"sort","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]"],"mutant":{"filename":"LambdaMap.java","line":141,"block":19,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"get","class":"ch.lambdaj.collection.LambdaMap"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]"],"mutant":{"filename":"LambdaMap.java","line":47,"block":2,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaMap;","method":"convertValues","class":"ch.lambdaj.collection.LambdaMap"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]"],"mutant":{"filename":"LambdaList.java","line":50,"block":4,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"sort","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:162)]"],"mutant":{"filename":"LambdaList.java","line":89,"block":9,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"distinct","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102)]"],"mutant":{"filename":"LambdaList.java","line":49,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"sort","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185)]"],"mutant":{"filename":"LambdaList.java","line":41,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"remove","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]"],"mutant":{"filename":"LambdaList.java","line":97,"block":10,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"project","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]"],"mutant":{"filename":"LambdaList.java","line":122,"block":13,"id":{"indexes":"[7]","location":{"mdesc":"(I)Ljava\/lang\/Object;","method":"get","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]"],"mutant":{"filename":"LambdaList.java","line":80,"block":8,"id":{"indexes":"[6]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"replace","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387)]"],"mutant":{"filename":"LambdaList.java","line":66,"block":6,"id":{"indexes":"[9]","location":{"mdesc":"(Lch\/lambdaj\/function\/convert\/Converter;)Lch\/lambdaj\/collection\/LambdaList;","method":"convert","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"LambdaList.java","line":59,"block":5,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;I)Lch\/lambdaj\/collection\/LambdaCollection;","method":"sort","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]"],"mutant":{"filename":"LambdaList.java","line":81,"block":8,"id":{"indexes":"[10]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"replace","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:200), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:202), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:204), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:206)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]"],"mutant":{"filename":"LambdaList.java","line":26,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/List;","method":"innerList","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:149)]"],"mutant":{"filename":"LambdaList.java","line":34,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"retain","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]"],"mutant":{"filename":"LambdaList.java","line":58,"block":5,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;I)Lch\/lambdaj\/collection\/LambdaCollection;","method":"sort","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160)]"],"mutant":{"filename":"LambdaList.java","line":88,"block":9,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"distinct","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:325)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]"],"mutant":{"filename":"LambdaList.java","line":33,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"retain","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:183), ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:185)]"],"mutant":{"filename":"LambdaList.java","line":42,"block":3,"id":{"indexes":"[9]","location":{"mdesc":"(Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/collection\/LambdaList;","method":"remove","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366)]"],"mutant":{"filename":"LambdaList.java","line":73,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"extract","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:33), ch.lambdaj.util.iterator.IteratorFactory.discoverGenericType(IteratorFactory.java:23), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"IteratorFactory.java","line":32,"block":2,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"IteratorFactory.java","line":23,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$47445528.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:53), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$f5331faa.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"IteratorFactory.java","line":69,"block":21,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":49,"block":8,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"IteratorFactory.java","line":70,"block":23,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"IteratorFactory.java","line":70,"block":22,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"IteratorFactory.java","line":49,"block":7,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.forEach(Lambda.java:90), ch.lambdaj.mock.Exposure.toString(Exposure.java:64), ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:73), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:69), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:69), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asResettableIterator(IteratorFactory.java:69), ch.lambdaj.Lambda.forEach(Lambda.java:109), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"IteratorFactory.java","line":69,"block":20,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectFirst(Lambda.java:412), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectFirst(Lambda.java:412), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectFirst(Lambda.java:412), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectFirst(Lambda.java:412), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=com.sun.proxy.$Proxy4.toString(Unknown Source), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.Lambda.join(Lambda.java:984), ch.lambdaj.mock.Exposure.toString(Exposure.java:64), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.map(Lambda.java:1116), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectFirst(Lambda.java:412), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.map(Lambda.java:1116), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectUnique(Lambda.java:384), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.sort(Lambda.java:263), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.collection.LambdaIterable.doConvert(LambdaIterable.java:157), ch.lambdaj.collection.LambdaList.convert(LambdaList.java:66), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=com.sun.proxy.$Proxy4.toString(Unknown Source), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.join(Lambda.java:999), ch.lambdaj.Lambda.join(Lambda.java:984), ch.lambdaj.mock.Exposure.toString(Exposure.java:64), ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.convertIterator(Lambda.java:1030), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"IteratorFactory.java","line":50,"block":9,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"IteratorFactory.java","line":35,"block":4,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"IteratorFactory.java","line":68,"block":19,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:413), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.Lambda.selectFirst(Lambda.java:413), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:413), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.Lambda.selectFirst(Lambda.java:413), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.map(Lambda.java:1117), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:413), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.map(Lambda.java:1117), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.MatchingIterator.searchNext(MatchingIterator.java:36), ch.lambdaj.util.iterator.MatchingIterator.hasNext(MatchingIterator.java:47), ch.lambdaj.Lambda.selectUnique(Lambda.java:385), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.sort(Lambda.java:263), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.collection.LambdaIterable.doConvert(LambdaIterable.java:157), ch.lambdaj.collection.LambdaList.convert(LambdaList.java:66), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectDistinct(Lambda.java:471), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConverterIterator.hasNext(ConverterIterator.java:30), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]"],"mutant":{"filename":"IteratorFactory.java","line":50,"block":10,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"IteratorFactory.java","line":68,"block":18,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"asResettableIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.IteratorFactory.asIterator(IteratorFactory.java:54), ch.lambdaj.Lambda.typedSum(Lambda.java:605), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"IteratorFactory.java","line":51,"block":11,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.sumFrom(Lambda.java:637), ch.lambdaj.collection.LambdaIterable.sumFrom(LambdaIterable.java:67), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.minFrom(Lambda.java:784), ch.lambdaj.collection.LambdaIterable.minFrom(LambdaIterable.java:87), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.maxFrom(Lambda.java:856), ch.lambdaj.collection.LambdaIterable.maxFrom(LambdaIterable.java:77), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyUtil.createIterableProxy(ProxyUtil.java:75), ch.lambdaj.function.aggregate.ProxyAggregator.createProxyAggregator(ProxyAggregator.java:49), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:573), ch.lambdaj.Lambda.aggregateFrom(Lambda.java:556), ch.lambdaj.Lambda.joinFrom(Lambda.java:902), ch.lambdaj.collection.LambdaIterable.joinFrom(LambdaIterable.java:45), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"IteratorFactory.java","line":35,"block":6,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Class;","method":"discoverGenericType","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"IteratorFactory.java","line":51,"block":12,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/util\/Iterator;","method":"asIterator","class":"ch.lambdaj.util.iterator.IteratorFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":36,"block":9,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"ProxyAggregator.java","line":29,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":37,"block":10,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":34,"block":4,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"ProxyAggregator.java","line":35,"block":7,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]"],"mutant":{"filename":"ProxyAggregator.java","line":38,"block":12,"id":{"indexes":"[43]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":34,"block":5,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"ProxyAggregator.java","line":29,"block":2,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"ProxyAggregator.java","line":49,"block":18,"id":{"indexes":"[10]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Lch\/lambdaj\/function\/aggregate\/Aggregator;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxyAggregator","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":37,"block":11,"id":{"indexes":"[39]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":35,"block":6,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyAggregator.java","line":36,"block":8,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"normalizeResult","class":"ch.lambdaj.function.aggregate.ProxyAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":51,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"ProxyIterator.java","line":39,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"ProxyIterator.java","line":40,"block":3,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"ProxyIterator.java","line":55,"block":15,"id":{"indexes":"[83]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":92,"block":18,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"ProxyIterator.java","line":71,"block":16,"id":{"indexes":"[90]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":52,"block":8,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), com.sun.proxy.$Proxy5.setLastName(Unknown Source), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6c51d59f.setLastName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6c51d59f.setBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyIterator.java","line":40,"block":4,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":53,"block":8,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyIterator.java","line":81,"block":17,"id":{"indexes":"[9]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ProxyIterator.java","line":93,"block":18,"id":{"indexes":"[15]","location":{"mdesc":"(Lch\/lambdaj\/util\/iterator\/ResettableIterator;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"createProxyIterator","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"ProxyIterator.java","line":51,"block":6,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Lch\/lambdaj\/util\/iterator\/ResettableIterator;","method":"iterateOnValues","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyIterator.java","line":39,"block":2,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.proxy.ProxyIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":57,"block":14,"id":{"indexes":"[45]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":35,"block":8,"id":{"indexes":"[104]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":35,"block":8,"id":{"indexes":"[100]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:32), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":25,"block":1,"id":{"indexes":"[34]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":35,"block":8,"id":{"indexes":"[104]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:32), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":41,"block":10,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/reflect\/Constructor;[Ljava\/lang\/Object;)Z","method":"isCompatible","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ConstructorArgumentConverter.java","line":24,"block":3,"id":{"indexes":"[45]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":53,"block":13,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":34,"block":6,"id":{"indexes":"[74]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ConstructorArgumentConverter.java","line":24,"block":3,"id":{"indexes":"[49]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:32), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":24,"block":3,"id":{"indexes":"[49]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:32), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":31,"block":4,"id":{"indexes":"[54]","location":{"mdesc":"(Ljava\/lang\/Class;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:54), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]"],"mutant":{"filename":"ConstructorArgumentConverter.java","line":54,"block":13,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.ConstructorArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:144), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:58), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:104)]"],"mutant":{"filename":"ComparatorUtil.java","line":38,"block":10,"id":{"indexes":"[12]","location":{"mdesc":"(I)Ljava\/util\/Comparator;","method":"getStandardComparator","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":29,"block":5,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ComparatorUtil.java","line":30,"block":6,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.compare.ComparatorUtil.nullSafeCompare(ComparatorUtil.java:30), ch.lambdaj.function.compare.ArgumentComparator.compare(ArgumentComparator.java:65), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]"],"mutant":{"filename":"ComparatorUtil.java","line":36,"block":9,"id":{"indexes":"[8]","location":{"mdesc":"(I)Ljava\/util\/Comparator;","method":"getStandardComparator","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ComparatorUtil.java","line":30,"block":8,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ComparatorUtil.java","line":29,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":29,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Comparator;Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"nullSafeCompare","class":"ch.lambdaj.function.compare.ComparatorUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectUnique(Lambda.java:387), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"MatchingIterator.java","line":48,"block":9,"id":{"indexes":"[17]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:312)]"],"mutant":{"filename":"MatchingIterator.java","line":58,"block":12,"id":{"indexes":"[23]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"MatchingIterator.java","line":47,"block":7,"id":{"indexes":"[7]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"MatchingIterator.java","line":47,"block":6,"id":{"indexes":"[5]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"MatchingIterator.java","line":48,"block":8,"id":{"indexes":"[14]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"MatchingIterator.java","line":36,"block":3,"id":{"indexes":"[30]","location":{"mdesc":"()V","method":"searchNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectUnique(Lambda.java:387), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"MatchingIterator.java","line":48,"block":7,"id":{"indexes":"[12]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"MatchingIterator.java","line":36,"block":4,"id":{"indexes":"[33]","location":{"mdesc":"()V","method":"searchNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectUnique(Lambda.java:387), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"MatchingIterator.java","line":38,"block":2,"id":{"indexes":"[21]","location":{"mdesc":"()V","method":"searchNext","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.MatchingIterator.next(MatchingIterator.java:55), ch.lambdaj.Lambda.selectUnique(Lambda.java:386), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:311)]"],"mutant":{"filename":"MatchingIterator.java","line":55,"block":10,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.MatchingIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"Argument.java","line":41,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.Argument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":46,"block":7,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":40,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":42,"block":9,"id":{"indexes":"[51]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":51,"block":14,"id":{"indexes":"[88]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":57,"block":15,"id":{"indexes":"[93]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":44,"block":5,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":55,"block":13,"id":{"indexes":"[76]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Concat.java","line":40,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:345)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]"],"mutant":{"filename":"Concat.java","line":53,"block":11,"id":{"indexes":"[63]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Concat"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:57), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:57), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:57), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":52,"block":8,"id":{"indexes":"[16]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), com.sun.proxy.$Proxy5.setLastName(Unknown Source), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$ded4f10b.setLastName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$ded4f10b.setBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), com.sun.proxy.$Proxy5.setLastName(Unknown Source), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$9c68c7f7.setLastName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$9c68c7f7.setBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":51,"block":7,"id":{"indexes":"[10]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":5,"id":{"indexes":"[15]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:51), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:51), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterator.next(ResettableIteratorOnIterator.java:51), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":51,"block":6,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.SumInteger.aggregate(SumInteger.java:28), ch.lambdaj.function.aggregate.SumInteger.aggregate(SumInteger.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.createProxyIterator(ProxyIterator.java:91), ch.lambdaj.Lambda.forEach(Lambda.java:110), ch.lambdaj.collection.AbstractLambdaCollection.forEach(AbstractLambdaCollection.java:152), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":55,"block":9,"id":{"indexes":"[33]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), com.sun.proxy.$Proxy5.setLastName(Unknown Source), ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6c51d59f.setLastName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.proxy.ProxyIterator.invoke(ProxyIterator.java:40), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$6c51d59f.setBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]"],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":44,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ResettableIteratorOnIterator.java","line":36,"block":1,"id":{"indexes":"[13]","location":{"mdesc":"()V","method":"reset","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoin(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoin(LambdaCollectionsTest.java:344)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinct(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinct(LambdaCollectionsTest.java:175)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:199)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:182)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:324)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:85)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:48)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:385)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:301)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:301)]"],"mutant":{"filename":"LambdaCollections.java","line":43,"block":3,"id":{"indexes":"[11]","location":{"mdesc":"([Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:208)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:187)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:330)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:267)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:114)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:390)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:166)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:229)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:369)]"],"mutant":{"filename":"LambdaCollections.java","line":52,"block":4,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/util\/Collection;)Lch\/lambdaj\/collection\/LambdaCollection;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:211)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:192)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:336)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:271)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:127)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:395)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:170)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:231)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:375)]"],"mutant":{"filename":"LambdaCollections.java","line":61,"block":5,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Iterable;)Lch\/lambdaj\/collection\/LambdaIterable;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:280), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:280), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectUnique(Lambda.java:387), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":33,"block":3,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:283)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:147), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:316)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":31,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.AbstractLambdaCollection.exists(AbstractLambdaCollection.java:201), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.selectFirst(Lambda.java:415), ch.lambdaj.collection.AbstractLambdaCollection.first(AbstractLambdaCollection.java:221), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.MatchingIterator.searchNext(MatchingIterator.java:38), ch.lambdaj.util.iterator.MatchingIterator.hasNext(MatchingIterator.java:47), ch.lambdaj.Lambda.selectUnique(Lambda.java:385), ch.lambdaj.collection.AbstractLambdaCollection.unique(AbstractLambdaCollection.java:231), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.all(AbstractLambdaCollection.java:211), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"HasArgumentWithValue.java","line":70,"block":7,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Lorg\/hamcrest\/Matcher;)Lch\/lambdaj\/function\/matcher\/HasArgumentWithValue;","method":"havingValue","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"HasArgumentWithValue.java","line":31,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasArgumentWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"Chooser.java","line":23,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"Chooser.java","line":22,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"Chooser.java","line":24,"block":5,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$879e68c1.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$879e68c1.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$879e68c1.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$879e68c1.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Chooser.emptyItem(Chooser.java:40), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:23), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]"],"mutant":{"filename":"Chooser.java","line":40,"block":6,"id":{"indexes":"[4]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"emptyItem","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Min.choose(Min.java:22), ch.lambdaj.function.aggregate.Min.choose(Min.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$efc799e7.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.function.aggregate.Max.choose(Max.java:22), ch.lambdaj.function.aggregate.Max.choose(Max.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$efc799e7.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Min.choose(Min.java:22), ch.lambdaj.function.aggregate.Min.choose(Min.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$efc799e7.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.function.aggregate.Max.choose(Max.java:22), ch.lambdaj.function.aggregate.Max.choose(Max.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$efc799e7.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"Chooser.java","line":22,"block":1,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Chooser.java","line":23,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testReplace(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:209), ch.lambdaj.collection.LambdaCollectionsTest.testReplace(LambdaCollectionsTest.java:212)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRemoveNull(LambdaCollectionsTest.java:193)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:150), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:152)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEachForProxy(LambdaCollectionsTest.java:49)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"LambdaIterator.java","line":68,"block":5,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.collection.LambdaIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRemoveNull(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectStringsThatEndsWithD(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:327), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:333), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectStringsThatEndsWithD(LambdaCollectionsTest.java:337)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"LambdaIterator.java","line":61,"block":4,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.collection.LambdaIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ChooserOnArgument.java","line":37,"block":4,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ChooserOnArgument.java","line":35,"block":2,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"ChooserOnArgument.java","line":37,"block":3,"id":{"indexes":"[24]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"ChooserOnArgument.java","line":35,"block":1,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"ChooserOnArgument.java","line":38,"block":5,"id":{"indexes":"[35]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"choose","class":"ch.lambdaj.function.aggregate.ChooserOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":33,"block":4,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$a4383f1a.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$a4383f1a.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyArgument.java","line":33,"block":3,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":32,"block":2,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$a4383f1a.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getFirstName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$bb1994d4.getBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$a4383f1a.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"ProxyArgument.java","line":36,"block":5,"id":{"indexes":"[47]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":54,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ComparatorUtil.java","line":55,"block":5,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ComparatorUtil.java","line":55,"block":7,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ComparatorUtil.java","line":54,"block":1,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"ComparatorUtil.java","line":54,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DefaultArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), ch.lambdaj.collection.LambdaIterator.next(LambdaIterator.java:68), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:220), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"ConverterIterator.java","line":30,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.function.convert.ConverterIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:223), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:225)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"ConverterIterator.java","line":37,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.function.convert.ConverterIterator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]"],"mutant":{"filename":"PairAggregator.java","line":24,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]"],"mutant":{"filename":"PairAggregator.java","line":24,"block":3,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"PairAggregator.java","line":25,"block":4,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/util\/Iterator;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.PairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136)]"],"mutant":{"filename":"MaxOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MaxOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"MaxOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MaxOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:136)]"],"mutant":{"filename":"MaxOnArgument.java","line":32,"block":3,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MaxOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:86), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:88)]"],"mutant":{"filename":"HasNestedPropertyWithValue.java","line":35,"block":1,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"matches","class":"ch.lambdaj.function.matcher.HasNestedPropertyWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectPersonWith4LettersName(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.Lambda.select(Lambda.java:332), ch.lambdaj.Lambda.select(Lambda.java:345), ch.lambdaj.collection.LambdaIterable.doRetain(LambdaIterable.java:101), ch.lambdaj.collection.LambdaList.retain(LambdaList.java:33), ch.lambdaj.collection.LambdaCollectionsTest.testSelectPersonWith4LettersName(LambdaCollectionsTest.java:85)]"],"mutant":{"filename":"HasNestedPropertyWithValue.java","line":61,"block":4,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/String;Lorg\/hamcrest\/Matcher;)Lorg\/hamcrest\/Matcher;","method":"hasNestedProperty","class":"ch.lambdaj.function.matcher.HasNestedPropertyWithValue"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"MinOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MinOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"MinOnArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MinOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:139)]"],"mutant":{"filename":"MinOnArgument.java","line":32,"block":3,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"chooseOnArgument","class":"ch.lambdaj.function.aggregate.MinOnArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239)]"],"mutant":{"filename":"Min.java","line":22,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Min.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239)]"],"mutant":{"filename":"Min.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.next(ResettableIteratorOnIterable.java:46), ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:43), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$f072b9b.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":39,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"hasNext","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$61186119.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.ProxyIterator.iterateOnValues(ProxyIterator.java:67), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$f072b9b.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":46,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"next","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEachForProxy(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$c7053a08.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.util.iterator.ResettableIteratorOnIterable.hasNext(ResettableIteratorOnIterable.java:39), ch.lambdaj.function.aggregate.Concat.aggregate(Concat.java:42), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Exposure$$EnhancerByCGLIB$$74f4048a.getCountryName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:352)]"],"mutant":{"filename":"ResettableIteratorOnIterable.java","line":25,"block":0,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Iterable;)V","method":"<init>","class":"ch.lambdaj.util.iterator.ResettableIteratorOnIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":[],"mutant":{"filename":"Max.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Max"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]"],"mutant":{"filename":"Max.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Max"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]"],"mutant":{"filename":"Max.java","line":22,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Max"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:250)]"],"mutant":{"filename":"SumInteger.java","line":28,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Integer;Ljava\/lang\/Integer;)Ljava\/lang\/Integer;","method":"aggregate","class":"ch.lambdaj.function.aggregate.SumInteger"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.SumInteger.aggregate(SumInteger.java:28), ch.lambdaj.function.aggregate.SumInteger.aggregate(SumInteger.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"SumInteger.java","line":28,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Integer;Ljava\/lang\/Integer;)Ljava\/lang\/Integer;","method":"aggregate","class":"ch.lambdaj.function.aggregate.SumInteger"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]"],"mutant":{"filename":"ComparatorUtil.java","line":67,"block":1,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DescendingArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:111)]"],"mutant":{"filename":"ComparatorUtil.java","line":67,"block":1,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ComparatorUtil$DescendingArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:50), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:39), ch.lambdaj.function.aggregate.Sum.aggregate(Sum.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.function.aggregate.ProxyAggregator.invoke(ProxyAggregator.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$58c22856.getAge(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.aggregate.SumInteger.aggregate(SumInteger.java:28), ch.lambdaj.function.aggregate.SumInteger.aggregate(SumInteger.java:1), ch.lambdaj.function.aggregate.PairAggregator.aggregate(PairAggregator.java:24), ch.lambdaj.Lambda.aggregate(Lambda.java:525), ch.lambdaj.Lambda.typedSum(Lambda.java:606), ch.lambdaj.Lambda.sum(Lambda.java:600), ch.lambdaj.collection.AbstractLambdaCollection.sum(AbstractLambdaCollection.java:103), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]"],"mutant":{"filename":"InitializedPairAggregator.java","line":27,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"emptyItem","class":"ch.lambdaj.function.aggregate.InitializedPairAggregator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvert(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:387), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:392), ch.lambdaj.collection.LambdaCollectionsTest.testConvert(LambdaCollectionsTest.java:397)]"],"mutant":{"filename":"PropertyExtractor.java","line":30,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.PropertyExtractor"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:96), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:98), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:100), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:102), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:105), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:107), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:109), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:115), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:118), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:120), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:122), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:124), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:128)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:160), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:167)]"],"mutant":{"filename":"ArgumentComparator.java","line":65,"block":4,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)I","method":"compare","class":"ch.lambdaj.function.compare.ArgumentComparator"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSumMinMax(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:237), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:239), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSumMinMax(LambdaCollectionsTest.java:241)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExists(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:290), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testExists(LambdaCollectionsTest.java:292)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:414)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectFirst(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectFirst(LambdaCollectionsTest.java:279)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testRetainWithHaving(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testRetainWithHaving(LambdaCollectionsTest.java:146)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.index(Lambda.java:1133), ch.lambdaj.collection.AbstractLambdaCollection.index(AbstractLambdaCollection.java:192), ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:404)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testFindOldest(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.aggregate.ChooserOnArgument.<init>(ChooserOnArgument.java:23), ch.lambdaj.function.aggregate.MaxOnArgument.<init>(MaxOnArgument.java:18), ch.lambdaj.Lambda.selectMax(Lambda.java:496), ch.lambdaj.collection.AbstractLambdaCollection.selectMax(AbstractLambdaCollection.java:121), ch.lambdaj.collection.LambdaCollectionsTest.testFindOldest(LambdaCollectionsTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectUnique(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testSelectUnique(LambdaCollectionsTest.java:308)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:257)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testJoinFrom(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:353), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testJoinFrom(LambdaCollectionsTest.java:356)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSortOnAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:47), ch.lambdaj.Lambda.sort(Lambda.java:264), ch.lambdaj.Lambda.sort(Lambda.java:249), ch.lambdaj.Lambda.sort(Lambda.java:236), ch.lambdaj.collection.LambdaIterable.doSort(LambdaIterable.java:129), ch.lambdaj.collection.LambdaList.sort(LambdaList.java:49), ch.lambdaj.collection.LambdaCollectionsTest.testSortOnAge(LambdaCollectionsTest.java:95)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testForEach(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$49b26c42.setLastName(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testForEach(LambdaCollectionsTest.java:37)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.compare.ArgumentComparator.<init>(ArgumentComparator.java:29), ch.lambdaj.Lambda.selectDistinctArgument(Lambda.java:458), ch.lambdaj.collection.LambdaIterable.doDistinct(LambdaIterable.java:211), ch.lambdaj.collection.LambdaList.distinct(LambdaList.java:88), ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:159)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.function.convert.ConstructorArgumentConverter.<init>(ConstructorArgumentConverter.java:35), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$49b26c42.setBestFriend(<generated>), ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:248)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.convert.ArgumentConverter.<init>(ArgumentConverter.java:29), ch.lambdaj.Lambda.extract(Lambda.java:1066), ch.lambdaj.collection.LambdaIterable.doExtract(LambdaIterable.java:170), ch.lambdaj.collection.LambdaList.extract(LambdaList.java:73), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:363)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testAll(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.function.matcher.HasArgumentWithValue.havingValue(HasArgumentWithValue.java:70), ch.lambdaj.Lambda.having(Lambda.java:1204), ch.lambdaj.collection.LambdaCollectionsTest.testAll(LambdaCollectionsTest.java:299)]"],"mutant":{"filename":"InvocationInterceptor.java","line":21,"block":1,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;Lnet\/sf\/cglib\/proxy\/MethodProxy;)Ljava\/lang\/Object;","method":"intercept","class":"ch.lambdaj.proxy.InvocationInterceptor"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testIndex(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:415), ch.lambdaj.collection.LambdaCollectionsTest.testIndex(LambdaCollectionsTest.java:417)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testConvertMap(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testConvertMap(LambdaCollectionsTest.java:405)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtractAges(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:258), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:260), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:262), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:264), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:268), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtractAges(LambdaCollectionsTest.java:272)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testSelectDistinctAge(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testSelectDistinctAge(LambdaCollectionsTest.java:163)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testProjectDto(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.function.convert.ConstructorArgumentConverter.convert(ConstructorArgumentConverter.java:59), ch.lambdaj.function.convert.ConverterIterator.next(ConverterIterator.java:37), ch.lambdaj.Lambda.convert(Lambda.java:1017), ch.lambdaj.Lambda.project(Lambda.java:1148), ch.lambdaj.collection.LambdaIterable.doProject(LambdaIterable.java:227), ch.lambdaj.collection.LambdaList.project(LambdaList.java:97), ch.lambdaj.collection.LambdaCollectionsTest.testProjectDto(LambdaCollectionsTest.java:219)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testTypedSum2(ch.lambdaj.collection.LambdaCollectionsTest), assertion=ch.lambdaj.collection.LambdaCollectionsTest.testTypedSum2(LambdaCollectionsTest.java:249)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]","Description [testClass=ch.lambdaj.collection.LambdaCollectionsTest, name=testExtract(ch.lambdaj.collection.LambdaCollectionsTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:364), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:366), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:370), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:372), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:376), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.collection.LambdaCollectionsTest.testExtract(LambdaCollectionsTest.java:378)]"],"mutant":{"filename":"ArgumentConverter.java","line":36,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"convert","class":"ch.lambdaj.function.convert.ArgumentConverter"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
