{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Lambda.java","line":63,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"on","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:81)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:98)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.keySet(LambdaGroup.java:35), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:42)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"Lambda.java","line":1247,"block":149,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Lambda.java","line":1217,"block":146,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/group\/ArgumentGroupCondition;","method":"by","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":25,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":95,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$e6321630.getFirstName(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":48,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":19,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":60,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:182), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:70), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$806c3091.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":47,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":254,"block":94,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"getPrimitivePlaceHolder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":46,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d497dc67.getFirstName(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":49,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":64,"block":8,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":39,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$e6321630.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":182,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":54,"block":6,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":63,"block":8,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":22,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":29,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":31,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":49,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":109,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":108,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":12,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":187,"block":50,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":52,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":26,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":24,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:91), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":20,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":30,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":93,"block":17,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":92,"block":15,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"actualArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":51,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":110,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":23,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":13,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":51,"block":5,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentsFactory.java","line":264,"block":107,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isInt","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":3,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":2,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":1,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":27,"block":7,"id":{"indexes":"[57]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"IntrospectionUtil.java","line":25,"block":3,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;)Ljava\/lang\/String;","method":"getPropertyName","class":"ch.lambdaj.util.IntrospectionUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[21]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":115,"block":40,"id":{"indexes":"[29]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":34,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":104,"block":37,"id":{"indexes":"[58]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":116,"block":41,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":42,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":66,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInvokedPropertyName","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[52]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":38,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:103), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Invocation.java","line":103,"block":36,"id":{"indexes":"[43]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":49,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":46,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":114,"block":39,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":45,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.getConcreteArgs(Invocation.java:46), ch.lambdaj.function.argument.Invocation.invokeOn(Invocation.java:72), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:141), ch.lambdaj.function.argument.InvocationSequence.invokeOn(InvocationSequence.java:135), ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:131), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Invocation.java","line":45,"block":10,"id":{"indexes":"[5]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"Invocation.java","line":72,"block":20,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":67,"block":19,"id":{"indexes":"[15]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInvokedPropertyName","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":45,"block":11,"id":{"indexes":"[8]","location":{"mdesc":"()[Ljava\/lang\/Object;","method":"getConcreteArgs","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":100,"block":33,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":101,"block":35,"id":{"indexes":"[22]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":1,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":32,"block":0,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":47,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":102,"block":36,"id":{"indexes":"[36]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":113,"block":43,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":31,"block":0,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"<init>","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":103,"block":37,"id":{"indexes":"[51]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":58,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/reflect\/Method;","method":"getInvokedMethod","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":48,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":54,"block":15,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getInvokedClass","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"Invocation.java","line":72,"block":22,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.Invocation.hashCode(Invocation.java:102), ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$2f78165b.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Invocation.java","line":102,"block":35,"id":{"indexes":"[28]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":25,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[38]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":117,"block":31,"id":{"indexes":"[55]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":73,"block":14,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":78,"block":17,"id":{"indexes":"[7]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":111,"block":29,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":82,"block":18,"id":{"indexes":"[29]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":65,"block":10,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":115,"block":30,"id":{"indexes":"[42]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":102,"block":24,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":78,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":121,"block":33,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:82), ch.lambdaj.function.argument.InvocationSequence.getInkvokedPropertyName(InvocationSequence.java:73), ch.lambdaj.function.argument.Argument.getInkvokedPropertyName(Argument.java:31), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":81,"block":18,"id":{"indexes":"[23]","location":{"mdesc":"()Ljava\/lang\/String;","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"InvocationSequence.java","line":131,"block":35,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$456e07e2.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$456e07e2.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$456e07e2.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:111), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$456e07e2.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":69,"block":13,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Class;","method":"getRootInvokedClass","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":7,"id":{"indexes":"[35]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"InvocationSequence.java","line":141,"block":40,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":140,"block":39,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":26,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":114,"block":30,"id":{"indexes":"[37]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":22,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":139,"block":38,"id":{"indexes":"[6]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":64,"block":9,"id":{"indexes":"[45]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":74,"block":15,"id":{"indexes":"[14]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":23,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.evaluate(InvocationSequence.java:121), ch.lambdaj.function.argument.Argument.evaluate(Argument.java:41), ch.lambdaj.group.ArgumentGroupCondition.getGroupValue(ArgumentGroupCondition.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":121,"block":32,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:87), ch.lambdaj.function.argument.InvocationSequence.calcInkvokedPropertyName(InvocationSequence.java:81), ch.lambdaj.function.argument.InvocationSequence.getInkvokedPropertyName(InvocationSequence.java:73), ch.lambdaj.function.argument.Argument.getInkvokedPropertyName(Argument.java:31), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:21), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":86,"block":19,"id":{"indexes":"[4]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/StringBuilder;)V","method":"calcInkvokedPropertyName","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationSequence.java","line":113,"block":30,"id":{"indexes":"[50]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"InvocationSequence.java","line":139,"block":37,"id":{"indexes":"[4]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/Invocation;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":63,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"(Lch\/lambdaj\/function\/argument\/InvocationSequence;Lch\/lambdaj\/function\/argument\/Invocation;)V","method":"<init>","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"InvocationSequence.java","line":135,"block":36,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invokeOn","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":19,"id":{"indexes":"[116]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":21,"id":{"indexes":"[131]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":6,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":45,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":14,"id":{"indexes":"[77]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":15,"id":{"indexes":"[84]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":49,"block":12,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":91,"block":32,"id":{"indexes":"[16]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":46,"block":8,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":17,"id":{"indexes":"[99]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":48,"block":10,"id":{"indexes":"[34]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":34,"id":{"indexes":"[26]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":18,"id":{"indexes":"[106]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":11,"id":{"indexes":"[49]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":32,"id":{"indexes":"[20]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":90,"block":32,"id":{"indexes":"[11]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.argument.ArgumentsFactory.createPlaceholder(ArgumentsFactory.java:69), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:58), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyUtil.java","line":93,"block":34,"id":{"indexes":"[30]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:81)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:98)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:42)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"LambdaIterable.java","line":236,"block":32,"id":{"indexes":"[10]","location":{"mdesc":"([Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/collection\/LambdaGroup;","method":"group","class":"ch.lambdaj.collection.LambdaIterable"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]"],"mutant":{"filename":"LambdaCollection.java","line":159,"block":18,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"contains","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117)]"],"mutant":{"filename":"LambdaCollection.java","line":201,"block":24,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"size","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaCollection.contains(LambdaCollection.java:159), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaCollection.size(LambdaCollection.java:201), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117)]"],"mutant":{"filename":"LambdaCollection.java","line":27,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"innerCollection","class":"ch.lambdaj.collection.LambdaCollection"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"LambdaList.java","line":122,"block":13,"id":{"indexes":"[7]","location":{"mdesc":"(I)Ljava\/lang\/Object;","method":"get","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"LambdaList.java","line":26,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/List;","method":"innerList","class":"ch.lambdaj.collection.LambdaList"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]"],"mutant":{"filename":"GroupImpl.java","line":70,"block":13,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/Group;","method":"findGroup","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:36)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:126)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:126)]"],"mutant":{"filename":"GroupImpl.java","line":140,"block":27,"id":{"indexes":"[4]","location":{"mdesc":"()Z","method":"isLeaf","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"GroupImpl.java","line":89,"block":16,"id":{"indexes":"[27]","location":{"mdesc":"()Ljava\/util\/List;","method":"subgroups","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:1), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:1), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:1), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"GroupImpl.java","line":29,"block":1,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"addItem","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupImpl.java","line":42,"block":7,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:135)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:135)]"],"mutant":{"filename":"GroupImpl.java","line":126,"block":25,"id":{"indexes":"[10]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"first","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupImpl.java","line":35,"block":4,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:77)]"],"mutant":{"filename":"GroupImpl.java","line":147,"block":28,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Set;","method":"getHeads","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47)]"],"mutant":{"filename":"GroupImpl.java","line":60,"block":10,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Set;","method":"keySet","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupImpl.java","line":35,"block":6,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115)]"],"mutant":{"filename":"GroupImpl.java","line":133,"block":26,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"getSize","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.key(GroupImpl.java:49), ch.lambdaj.collection.LambdaGroup.key(LambdaGroup.java:28), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:123), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.key(GroupImpl.java:49), ch.lambdaj.collection.LambdaGroup.key(LambdaGroup.java:28), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:123), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130)]"],"mutant":{"filename":"GroupImpl.java","line":49,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"key","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]"],"mutant":{"filename":"GroupImpl.java","line":118,"block":23,"id":{"indexes":"[27]","location":{"mdesc":"()Ljava\/util\/List;","method":"findAll","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]"],"mutant":{"filename":"GroupImpl.java","line":79,"block":14,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/group\/Group;","method":"findGroup","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117)]"],"mutant":{"filename":"GroupImpl.java","line":33,"block":2,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Lch\/lambdaj\/group\/GroupItem;","method":"findOrCreate","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:79)]"],"mutant":{"filename":"GroupImpl.java","line":155,"block":29,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/lang\/String;","method":"getHeadValue","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"GroupImpl.java","line":90,"block":17,"id":{"indexes":"[31]","location":{"mdesc":"()Ljava\/util\/List;","method":"subgroups","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]"],"mutant":{"filename":"GroupImpl.java","line":70,"block":11,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/Group;","method":"findGroup","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.asList(GroupItem.java:69), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupItem.asList(GroupItem.java:69), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.asList(GroupItem.java:69), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupItem.asList(GroupItem.java:69), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]"],"mutant":{"filename":"GroupImpl.java","line":119,"block":24,"id":{"indexes":"[31]","location":{"mdesc":"()Ljava\/util\/List;","method":"findAll","class":"ch.lambdaj.group.GroupImpl"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"Groups.java","line":58,"block":7,"id":{"indexes":"[32]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:62), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:62), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Groups.java","line":61,"block":9,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Groups.java","line":60,"block":8,"id":{"indexes":"[38]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Groups.java","line":62,"block":9,"id":{"indexes":"[55]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:56), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"Groups.java","line":60,"block":8,"id":{"indexes":"[38]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:81)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.setChildren(GroupItem.java:80), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.keySet(LambdaGroup.java:35), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:42)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.setChildren(GroupItem.java:80), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Groups.java","line":67,"block":11,"id":{"indexes":"[86]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"Groups.java","line":63,"block":10,"id":{"indexes":"[77]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Groups.java","line":23,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/group\/ArgumentGroupCondition;","method":"by","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaList.get(LambdaList.java:122), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"Groups.java","line":58,"block":7,"id":{"indexes":"[28]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"Groups.java","line":63,"block":10,"id":{"indexes":"[73]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"Groups.java","line":66,"block":11,"id":{"indexes":"[82]","location":{"mdesc":"(Ljava\/lang\/Iterable;[Lch\/lambdaj\/group\/GroupCondition;)Lch\/lambdaj\/group\/Group;","method":"group","class":"ch.lambdaj.group.Groups"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]"],"mutant":{"filename":"LeafGroup.java","line":118,"block":14,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/lang\/String;","method":"getHeadValue","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]"],"mutant":{"filename":"LeafGroup.java","line":118,"block":12,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/lang\/String;","method":"getHeadValue","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:1), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]"],"mutant":{"filename":"LeafGroup.java","line":55,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/List;","method":"findAll","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"LeafGroup.java","line":30,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"key","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:62)]"],"mutant":{"filename":"LeafGroup.java","line":109,"block":11,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Set;","method":"keySet","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.AbstractLambdaCollection.<init>(AbstractLambdaCollection.java:31), ch.lambdaj.collection.LambdaIterable.<init>(LambdaIterable.java:27), ch.lambdaj.collection.LambdaCollection.<init>(LambdaCollection.java:23), ch.lambdaj.collection.LambdaList.<init>(LambdaList.java:22), ch.lambdaj.collection.LambdaCollections.with(LambdaCollections.java:34), ch.lambdaj.collection.LambdaGroup.subgroups(LambdaGroup.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64)]"],"mutant":{"filename":"LeafGroup.java","line":88,"block":8,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/List;","method":"subgroups","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]"],"mutant":{"filename":"LeafGroup.java","line":125,"block":15,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Set;","method":"getHeads","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60)]"],"mutant":{"filename":"LeafGroup.java","line":95,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"getSize","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:58)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:133)]"],"mutant":{"filename":"LeafGroup.java","line":102,"block":10,"id":{"indexes":"[4]","location":{"mdesc":"()Z","method":"isLeaf","class":"ch.lambdaj.group.LeafGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"GroupItem.java","line":33,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"getGroupKey","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]"],"mutant":{"filename":"GroupItem.java","line":67,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]"],"mutant":{"filename":"GroupItem.java","line":69,"block":14,"id":{"indexes":"[36]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.asGroup(GroupItem.java:56), ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:70), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:81)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.asGroup(GroupItem.java:56), ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:70), ch.lambdaj.group.GroupImpl.findGroup(GroupImpl.java:79), ch.lambdaj.collection.LambdaGroup.findGroup(LambdaGroup.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:57)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"GroupItem.java","line":56,"block":7,"id":{"indexes":"[5]","location":{"mdesc":"()Lch\/lambdaj\/group\/Group;","method":"asGroup","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":47,"block":6,"id":{"indexes":"[30]","location":{"mdesc":"()Ljava\/util\/List;","method":"getChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115), ch.lambdaj.group.GroupImpl.first(GroupImpl.java:126), ch.lambdaj.collection.LambdaGroup.first(LambdaGroup.java:98), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]"],"mutant":{"filename":"GroupItem.java","line":70,"block":15,"id":{"indexes":"[40]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.iterator(GroupItem.java:63), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.group.GroupImpl.getSize(GroupImpl.java:133), ch.lambdaj.collection.LambdaGroup.getSize(LambdaGroup.java:105), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.group.GroupImpl.findAll(GroupImpl.java:118), ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.iterator(GroupItem.java:63), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":67,"block":12,"id":{"indexes":"[8]","location":{"mdesc":"()Ljava\/util\/List;","method":"asList","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":63,"block":10,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Iterator;","method":"iterator","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":43,"block":5,"id":{"indexes":"[12]","location":{"mdesc":"()Ljava\/util\/List;","method":"getChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130)]"],"mutant":{"filename":"GroupItem.java","line":80,"block":19,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/group\/GroupImpl;)V","method":"setChildren","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":29,"block":1,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)V","method":"<init>","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.getChildren(GroupItem.java:42), ch.lambdaj.group.GroupItem.addChild(GroupItem.java:75), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":37,"block":4,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getChildrenNodeName","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:132)]"],"mutant":{"filename":"GroupItem.java","line":56,"block":9,"id":{"indexes":"[20]","location":{"mdesc":"()Lch\/lambdaj\/group\/Group;","method":"asGroup","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupItem.addChild(GroupItem.java:74), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupItem.java","line":74,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"addChild","class":"ch.lambdaj.group.GroupItem"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:79), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:79), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:79), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]"],"mutant":{"filename":"LambdaGroup.java","line":128,"block":13,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/String;)Ljava\/lang\/String;","method":"getHeadValue","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:77), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:77), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:77), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:77), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88)]"],"mutant":{"filename":"LambdaGroup.java","line":119,"block":12,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Set;","method":"getHeads","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:62)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:62)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:62)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:43), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:45), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:47), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:62)]"],"mutant":{"filename":"LambdaGroup.java","line":35,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Set;","method":"keySet","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]"],"mutant":{"filename":"LambdaGroup.java","line":45,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/collection\/LambdaGroup;","method":"findGroup","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:121)]"],"mutant":{"filename":"LambdaGroup.java","line":98,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"first","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.key(LambdaGroup.java:28), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:123)]"],"mutant":{"filename":"LambdaGroup.java","line":28,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/Object;","method":"key","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"LambdaGroup.java","line":64,"block":5,"id":{"indexes":"[7]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaList;","method":"subgroups","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:38), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:60)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:115)]"],"mutant":{"filename":"LambdaGroup.java","line":105,"block":10,"id":{"indexes":"[6]","location":{"mdesc":"()I","method":"getSize","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:99)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:36), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:58)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:36), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:58)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:119)]"],"mutant":{"filename":"LambdaGroup.java","line":112,"block":11,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"isLeaf","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]"],"mutant":{"filename":"LambdaGroup.java","line":55,"block":4,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaGroup;","method":"findGroup","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]"],"mutant":{"filename":"LambdaGroup.java","line":91,"block":8,"id":{"indexes":"[7]","location":{"mdesc":"()Lch\/lambdaj\/collection\/LambdaList;","method":"findAll","class":"ch.lambdaj.collection.LambdaGroup"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.sortGroup(GroupCondition.java:69), ch.lambdaj.group.Groups.group(Groups.java:66), ch.lambdaj.group.Groups.group(Groups.java:63), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupCondition.java","line":69,"block":11,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/util\/List;)V","method":"sortGroup","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:29), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupCondition.java","line":50,"block":6,"id":{"indexes":"[48]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"GroupCondition.java","line":69,"block":12,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/util\/List;)V","method":"sortGroup","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]"],"mutant":{"filename":"GroupCondition.java","line":35,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupCondition;","method":"as","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupCondition.java","line":39,"block":3,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/util\/Collection;","method":"getAdditionalPropertyNames","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]"],"mutant":{"filename":"GroupCondition.java","line":54,"block":9,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"asNotNullString","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]"],"mutant":{"filename":"GroupCondition.java","line":54,"block":7,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"asNotNullString","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:47), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupCondition.java","line":47,"block":5,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/GroupItem;","method":"create","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.getAlias(GroupCondition.java:25), ch.lambdaj.group.GroupCondition.create(GroupCondition.java:45), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"GroupCondition.java","line":25,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getAlias","class":"ch.lambdaj.group.GroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"Argument.java","line":31,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getInkvokedPropertyName","class":"ch.lambdaj.function.argument.Argument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"Argument.java","line":41,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"evaluate","class":"ch.lambdaj.function.argument.Argument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"LambdaCollections.java","line":43,"block":3,"id":{"indexes":"[11]","location":{"mdesc":"([Ljava\/lang\/Object;)Lch\/lambdaj\/collection\/LambdaList;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:102), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:104), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:107)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:40), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:49), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:51), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:53), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:55), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:64), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:67), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:69)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:125)]"],"mutant":{"filename":"LambdaCollections.java","line":34,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/util\/List;)Lch\/lambdaj\/collection\/LambdaList;","method":"with","class":"ch.lambdaj.collection.LambdaCollections"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":45,"block":3,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/String;)Lch\/lambdaj\/group\/ArgumentGroupCondition;","method":"as","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupCondition.create(GroupCondition.java:46), ch.lambdaj.group.GroupImpl.create(GroupImpl.java:39), ch.lambdaj.group.GroupImpl.findOrCreate(GroupImpl.java:35), ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":28,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Ljava\/lang\/String;","method":"getGroupName","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":74,"block":6,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/String;Ljava\/lang\/Object;)Ljava\/lang\/String;","method":"getAdditionalPropertyValue","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:82), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:84), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:86), ch.lambdaj.collection.LambdaGroup.getHeads(LambdaGroup.java:119), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:88), ch.lambdaj.collection.LambdaGroup.getHeadValue(LambdaGroup.java:128), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:90)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:101)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroup.findAll(LambdaGroup.java:91), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:66)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:117), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:130), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:137)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":35,"block":2,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"getGroupValue","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.group.GroupImpl.addItem(GroupImpl.java:28), ch.lambdaj.group.Groups.group(Groups.java:58), ch.lambdaj.Lambda.group(Lambda.java:1247), ch.lambdaj.collection.LambdaIterable.group(LambdaIterable.java:236), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]"],"mutant":{"filename":"ArgumentGroupCondition.java","line":67,"block":5,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/String;)Lch\/lambdaj\/group\/ArgumentGroupCondition;","method":"head","class":"ch.lambdaj.group.ArgumentGroupCondition"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":33,"block":4,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$3e1e7865.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$3e1e7865.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$3e1e7865.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ProxyArgument.invoke(ProxyArgument.java:33), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.mock.Person$$EnhancerByCGLIB$$3e1e7865.getAge(<generated>), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyArgument.java","line":33,"block":3,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":32,"block":2,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.mock.Person$$EnhancerByCGLIB$$d43557e4.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.Lambda.on(Lambda.java:63), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"ProxyArgument.java","line":36,"block":5,"id":{"indexes":"[47]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest)]"],"killing":["Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAsPersonsWithName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAsPersonsWithName(LambdaGroupTest.java:76)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAgeAndName(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAgeAndName(LambdaGroupTest.java:97)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupByAge(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupByAge(LambdaGroupTest.java:35)]","Description [testClass=ch.lambdaj.collection.LambdaGroupTest, name=testGroupAndSubgroup(ch.lambdaj.collection.LambdaGroupTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.actualArgument(ArgumentsFactory.java:92), ch.lambdaj.group.ArgumentGroupCondition.<init>(ArgumentGroupCondition.java:20), ch.lambdaj.group.Groups.by(Groups.java:23), ch.lambdaj.Lambda.by(Lambda.java:1217), ch.lambdaj.collection.LambdaGroupTest.testGroupAndSubgroup(LambdaGroupTest.java:114)]"],"mutant":{"filename":"InvocationInterceptor.java","line":21,"block":1,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;Lnet\/sf\/cglib\/proxy\/MethodProxy;)Ljava\/lang\/Object;","method":"intercept","class":"ch.lambdaj.proxy.InvocationInterceptor"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
