{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"Lambda.java","line":1288,"block":153,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"var","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"Lambda.java","line":1260,"block":150,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"of","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"Lambda.java","line":1279,"block":152,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"of","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"Lambda.java","line":1296,"block":154,"id":{"indexes":"[4]","location":{"mdesc":"()Lch\/lambdaj\/function\/closure\/Closure;","method":"closure","class":"ch.lambdaj.Lambda"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":25,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$65a4a12e.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$65a4a12e.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$65a4a12e.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$65a4a12e.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$65a4a12e.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$65a4a12e.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":48,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":175,"block":42,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createFinalArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":19,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":60,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":47,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$e4267af9.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":11,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ArgumentsFactory.java","line":163,"block":34,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createClosureArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":186,"block":49,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":64,"block":8,"id":{"indexes":"[37]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$2bc37d04.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$2bc37d04.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$2bc37d04.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$2bc37d04.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":39,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createArgumentPlaceholder(ArgumentsFactory.java:196), ch.lambdaj.function.argument.ArgumentsFactory.createFinalArgumentPlaceholder(ArgumentsFactory.java:176), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.createClosureVarPlaceholder(ClosuresFactory.java:109), ch.lambdaj.Lambda.var(Lambda.java:1288), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":162,"block":32,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createClosureArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":54,"block":6,"id":{"indexes":"[41]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":174,"block":38,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createFinalArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":63,"block":8,"id":{"indexes":"[33]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"registerNewArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ArgumentsFactory.java","line":176,"block":43,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createFinalArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":22,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":167,"block":37,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToClosureArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]"],"mutant":{"filename":"ArgumentsFactory.java","line":162,"block":33,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createClosureArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":174,"block":40,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createFinalArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":29,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":31,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$6c0eddd2.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":49,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ArgumentsFactory.java","line":68,"block":9,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":163,"block":36,"id":{"indexes":"[20]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createClosureArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:80), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":12,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":174,"block":39,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createFinalArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":52,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createFinalArgumentPlaceholder(ArgumentsFactory.java:175), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.createClosureVarPlaceholder(ClosuresFactory.java:109), ch.lambdaj.Lambda.var(Lambda.java:1288), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createFinalArgumentPlaceholder(ArgumentsFactory.java:175), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.createClosureVarPlaceholder(ClosuresFactory.java:109), ch.lambdaj.Lambda.var(Lambda.java:1288), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createFinalArgumentPlaceholder(ArgumentsFactory.java:175), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.createClosureVarPlaceholder(ClosuresFactory.java:109), ch.lambdaj.Lambda.var(Lambda.java:1288), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.createFinalArgumentPlaceholder(ArgumentsFactory.java:175), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.createClosureVarPlaceholder(ClosuresFactory.java:109), ch.lambdaj.Lambda.var(Lambda.java:1288), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":175,"block":41,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createFinalArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:97), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":97,"block":18,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$4e1696f0.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":26,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$22d72f31.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$22d72f31.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$22d72f31.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$22d72f31.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$22d72f31.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$22d72f31.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":24,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$bc7261ea.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":98,"block":20,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"placeholderToArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$a40a3084.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":30,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.getArgument(ArgumentsFactory.java:133), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToArgument(ArgumentsFactory.java:98), ch.lambdaj.function.argument.ArgumentsFactory.placeholderToClosureArgument(ArgumentsFactory.java:167), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1212f546.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ArgumentsFactory.java","line":112,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":189,"block":51,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Ljava\/lang\/Integer;)Ljava\/lang\/Object;","method":"createArgumentPlaceholder","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":108,"block":23,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"isLimitedValues","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ArgumentsFactory.java","line":80,"block":13,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Lch\/lambdaj\/function\/argument\/Argument;)V","method":"bindArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.booleanToInt(ArgumentsFactory.java:124), ch.lambdaj.function.argument.ArgumentsFactory$LimitedValuesArgumentHolder.setArgument(ArgumentsFactory.java:129), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:52), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ArgumentsFactory.java","line":51,"block":5,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Class;Lch\/lambdaj\/function\/argument\/InvocationSequence;)Ljava\/lang\/Object;","method":"createArgument","class":"ch.lambdaj.function.argument.ArgumentsFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:108)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:97)]"],"mutant":{"filename":"AbstractClosure.java","line":148,"block":30,"id":{"indexes":"[6]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"closeOne","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]"],"mutant":{"filename":"AbstractClosure.java","line":219,"block":71,"id":{"indexes":"[167]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:230), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:230), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:230), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:230), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":210,"block":57,"id":{"indexes":"[13]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeUnhandledInvocations(AbstractClosure.java:136), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:35), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeUnhandledInvocations(AbstractClosure.java:136), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:35), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeUnhandledInvocations(AbstractClosure.java:136), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:35), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeUnhandledInvocations(AbstractClosure.java:136), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:35), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"AbstractClosure.java","line":136,"block":28,"id":{"indexes":"[21]","location":{"mdesc":"()V","method":"closeUnhandledInvocations","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:108)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:97)]"],"mutant":{"filename":"AbstractClosure.java","line":126,"block":21,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":125,"block":20,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":245,"block":75,"id":{"indexes":"[7]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":214,"block":60,"id":{"indexes":"[45]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":131,"block":22,"id":{"indexes":"[11]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/Invokable;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":219,"block":71,"id":{"indexes":"[167]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":248,"block":78,"id":{"indexes":"[31]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":117,"block":18,"id":{"indexes":"[15]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"setClosed","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":250,"block":81,"id":{"indexes":"[43]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":125,"block":21,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"AbstractClosure.java","line":62,"block":3,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"of","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkClosedType(AbstractClosure.java:257), ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:252), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkClosedType(AbstractClosure.java:257), ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:252), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:252), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkClosedType(AbstractClosure.java:257), ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:252), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:252), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkClosedType(AbstractClosure.java:257), ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:252), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":252,"block":83,"id":{"indexes":"[67]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":117,"block":17,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)V","method":"setClosed","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:220), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":219,"block":71,"id":{"indexes":"[162]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]"],"mutant":{"filename":"AbstractClosure.java","line":157,"block":39,"id":{"indexes":"[80]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"closeOne","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:108)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:97)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:160), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:160), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:160), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:160), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":160,"block":40,"id":{"indexes":"[84]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"closeOne","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":252,"block":84,"id":{"indexes":"[72]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":209,"block":56,"id":{"indexes":"[8]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1807f927.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"AbstractClosure.java","line":131,"block":25,"id":{"indexes":"[37]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/Invokable;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]"],"mutant":{"filename":"AbstractClosure.java","line":248,"block":79,"id":{"indexes":"[34]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:230), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]"],"mutant":{"filename":"AbstractClosure.java","line":230,"block":70,"id":{"indexes":"[141]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31a3f35d.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31a3f35d.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31a3f35d.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31a3f35d.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31a3f35d.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31a3f35d.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"AbstractClosure.java","line":131,"block":25,"id":{"indexes":"[41]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/Invokable;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":61,"block":3,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"of","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":209,"block":55,"id":{"indexes":"[6]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:154), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:154), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":154,"block":32,"id":{"indexes":"[28]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"closeOne","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":131,"block":25,"id":{"indexes":"[41]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/Invokable;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":253,"block":84,"id":{"indexes":"[76]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:228), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:228), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:228), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:228), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":228,"block":67,"id":{"indexes":"[124]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]"],"mutant":{"filename":"AbstractClosure.java","line":131,"block":24,"id":{"indexes":"[29]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/Invokable;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":231,"block":70,"id":{"indexes":"[148]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":158,"block":37,"id":{"indexes":"[66]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"closeOne","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":137,"block":29,"id":{"indexes":"[26]","location":{"mdesc":"()V","method":"closeUnhandledInvocations","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":131,"block":25,"id":{"indexes":"[34]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/Invokable;[Ljava\/lang\/Object;)V","method":"bindInvocation","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":156,"block":34,"id":{"indexes":"[41]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"closeOne","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":121,"block":19,"id":{"indexes":"[6]","location":{"mdesc":"()Z","method":"isClosedOnFreeVar","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":228,"block":68,"id":{"indexes":"[129]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":245,"block":74,"id":{"indexes":"[4]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]"],"mutant":{"filename":"AbstractClosure.java","line":246,"block":76,"id":{"indexes":"[12]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"AbstractClosure.java","line":248,"block":80,"id":{"indexes":"[36]","location":{"mdesc":"([Ljava\/lang\/Object;)Z","method":"checkParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":213,"block":72,"id":{"indexes":"[178]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"AbstractClosure.java","line":241,"block":73,"id":{"indexes":"[182]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/util\/List;","method":"bindParams","class":"ch.lambdaj.function.closure.AbstractClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":44,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":49,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":46,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":45,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":47,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"Invocation.java","line":120,"block":48,"id":{"indexes":"[16]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z","method":"areNullSafeEquals","class":"ch.lambdaj.function.argument.Invocation"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":25,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":117,"block":31,"id":{"indexes":"[55]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":111,"block":29,"id":{"indexes":"[16]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":102,"block":24,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":28,"id":{"indexes":"[8]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":26,"id":{"indexes":"[26]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":22,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":101,"block":23,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;)Z","method":"equals","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$97492255.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$97492255.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$97492255.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.argument.InvocationSequence.hashCode(InvocationSequence.java:114), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:48), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$97492255.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"InvocationSequence.java","line":113,"block":30,"id":{"indexes":"[50]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"InvocationSequence.java","line":110,"block":27,"id":{"indexes":"[5]","location":{"mdesc":"()I","method":"hashCode","class":"ch.lambdaj.function.argument.InvocationSequence"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":19,"id":{"indexes":"[116]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:375), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:38), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$5b6be8cf.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:375), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:38), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$5b6be8cf.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]"],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":21,"id":{"indexes":"[131]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createNativeJavaProxy(ProxyUtil.java:97), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:45), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":45,"block":6,"id":{"indexes":"[5]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":45,"block":7,"id":{"indexes":"[18]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":14,"id":{"indexes":"[77]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":15,"id":{"indexes":"[84]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ProxyUtil.java","line":33,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isProxable","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":49,"block":12,"id":{"indexes":"[56]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":91,"block":32,"id":{"indexes":"[16]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:46), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":46,"block":8,"id":{"indexes":"[23]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":17,"id":{"indexes":"[99]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:48), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":48,"block":10,"id":{"indexes":"[34]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":34,"id":{"indexes":"[26]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":55,"block":18,"id":{"indexes":"[106]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":33,"block":5,"id":{"indexes":"[17]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isProxable","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:55), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":55,"block":11,"id":{"indexes":"[49]","location":{"mdesc":"(Lch\/lambdaj\/proxy\/InvocationInterceptor;Ljava\/lang\/Class;Z[Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxy","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ProxyUtil.java","line":33,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isProxable","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyUtil.java","line":92,"block":32,"id":{"indexes":"[20]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ProxyUtil.java","line":33,"block":2,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isProxable","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.validate(Enhancer.java:333), net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:371), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":90,"block":32,"id":{"indexes":"[11]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:375), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:38), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$8243bb49.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:375), net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285), ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:38), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$8243bb49.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]"],"mutant":{"filename":"ProxyUtil.java","line":92,"block":33,"id":{"indexes":"[23]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.ProxyUtil.createProxy(ProxyUtil.java:49), ch.lambdaj.function.closure.ClosuresFactory.createProxyClosure(ClosuresFactory.java:40), ch.lambdaj.function.closure.AbstractClosure.of(AbstractClosure.java:62), ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyUtil.java","line":93,"block":34,"id":{"indexes":"[30]","location":{"mdesc":"(Lnet\/sf\/cglib\/proxy\/MethodInterceptor;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Lnet\/sf\/cglib\/proxy\/Enhancer;","method":"createEnhancer","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ProxyUtil.java","line":33,"block":4,"id":{"indexes":"[14]","location":{"mdesc":"(Ljava\/lang\/Class;)Z","method":"isProxable","class":"ch.lambdaj.proxy.ProxyUtil"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$44fb6723.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$44fb6723.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$44fb6723.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$44fb6723.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ClosuresFactory.java","line":120,"block":14,"id":{"indexes":"[23]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.bindClosure(ClosuresFactory.java:30), ch.lambdaj.Lambda.of(Lambda.java:1279), ch.lambdaj.Lambda.of(Lambda.java:1260), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ClosuresFactory.java","line":49,"block":3,"id":{"indexes":"[11]","location":{"mdesc":"()Lch\/lambdaj\/function\/closure\/Closure;","method":"createClosure","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":118,"block":9,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ClosuresFactory.java","line":40,"block":2,"id":{"indexes":"[12]","location":{"mdesc":"(Lch\/lambdaj\/function\/closure\/AbstractClosure;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createProxyClosure","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ClosuresFactory.java","line":119,"block":12,"id":{"indexes":"[13]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:224), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":119,"block":11,"id":{"indexes":"[11]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":109,"block":8,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"createClosureVarPlaceholder","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":50,"block":3,"id":{"indexes":"[15]","location":{"mdesc":"()Lch\/lambdaj\/function\/closure\/Closure;","method":"createClosure","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31b53541.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31b53541.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31b53541.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31b53541.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31b53541.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ClosuresFactory.getClosureVarArgument(ClosuresFactory.java:125), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:119), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$31b53541.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ClosuresFactory.java","line":125,"block":16,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/argument\/Argument;","method":"getClosureVarArgument","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ClosuresFactory.java","line":118,"block":10,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ClosuresFactory.java","line":30,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Class;)Ljava\/lang\/Object;","method":"bindClosure","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$68676964.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$68676964.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$68676964.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$68676964.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$68676964.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ClosuresFactory.java","line":121,"block":15,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:32), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]"],"mutant":{"filename":"ClosuresFactory.java","line":120,"block":13,"id":{"indexes":"[21]","location":{"mdesc":"(Ljava\/lang\/Object;)Lch\/lambdaj\/function\/closure\/ClosuresFactory$ClosureVarType;","method":"getClosureVarType","class":"ch.lambdaj.function.closure.ClosuresFactory"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$749d325f.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$749d325f.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$749d325f.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:36), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$749d325f.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyClosure.java","line":36,"block":4,"id":{"indexes":"[44]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyClosure.java","line":34,"block":3,"id":{"indexes":"[35]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyClosure.java","line":27,"block":2,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:108)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:97)]"],"mutant":{"filename":"ProxyClosure.java","line":29,"block":3,"id":{"indexes":"[22]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyClosure.java","line":38,"block":5,"id":{"indexes":"[51]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyClosure.java","line":31,"block":3,"id":{"indexes":"[25]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyClosure.java","line":35,"block":4,"id":{"indexes":"[40]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:27), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1c699cff.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:27), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1c699cff.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:27), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1c699cff.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:27), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1c699cff.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:27), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1c699cff.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:27), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$1c699cff.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyClosure.java","line":27,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.ProxyClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:108)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:97)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"Closure.java","line":23,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"([Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"apply","class":"ch.lambdaj.function.closure.Closure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":33,"block":4,"id":{"indexes":"[27]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":33,"block":3,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"ProxyArgument.java","line":32,"block":2,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=$java.util.ArrayList$$EnhancerByCGLIB$$4e9a7945.equals(<generated>), ch.lambdaj.function.argument.ArgumentsFactory.bindArgument(ArgumentsFactory.java:81), ch.lambdaj.function.argument.ArgumentsFactory.registerNewArgument(ArgumentsFactory.java:63), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:50), ch.lambdaj.function.argument.ArgumentsFactory.createArgument(ArgumentsFactory.java:39), ch.lambdaj.function.argument.ArgumentsFactory.createClosureArgumentPlaceholder(ArgumentsFactory.java:163), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$52b56ce9.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=$java.util.ArrayList$$EnhancerByCGLIB$$4e9a7945.equals(<generated>), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$52b56ce9.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=$java.util.ArrayList$$EnhancerByCGLIB$$4e9a7945.equals(<generated>), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$52b56ce9.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=$java.util.ArrayList$$EnhancerByCGLIB$$4e9a7945.equals(<generated>), ch.lambdaj.function.closure.ClosuresFactory.getClosureVarType(ClosuresFactory.java:120), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:131), ch.lambdaj.function.closure.AbstractClosure.bindInvocation(AbstractClosure.java:126), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:29), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$52b56ce9.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"ProxyArgument.java","line":32,"block":1,"id":{"indexes":"[7]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.argument.ProxyArgument"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.DelayedClosure.call(DelayedClosure.java:68), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:31), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$27a69824.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:105)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.DelayedClosure.call(DelayedClosure.java:68), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:31), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$27a69824.createObject(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:94)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.DelayedClosure.call(DelayedClosure.java:68), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:31), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$27a69824.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.DelayedClosure.call(DelayedClosure.java:68), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:31), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$27a69824.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.DelayedClosure.call(DelayedClosure.java:68), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:31), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$27a69824.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.DelayedClosure.call(DelayedClosure.java:68), ch.lambdaj.function.closure.ProxyClosure.invoke(ProxyClosure.java:31), ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$27a69824.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"DelayedClosure.java","line":68,"block":2,"id":{"indexes":"[15]","location":{"mdesc":"()V","method":"call","class":"ch.lambdaj.function.closure.DelayedClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"DelayedClosure.java","line":68,"block":3,"id":{"indexes":"[17]","location":{"mdesc":"()V","method":"call","class":"ch.lambdaj.function.closure.DelayedClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":[],"mutant":{"filename":"DelayedClosure.java","line":67,"block":2,"id":{"indexes":"[11]","location":{"mdesc":"()V","method":"call","class":"ch.lambdaj.function.closure.DelayedClosure"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":132,"block":4,"id":{"indexes":"[13]","location":{"mdesc":"()Z","method":"isClosureVarPlaceholder","class":"ch.lambdaj.function.closure.ClosuresFactory$ClosureVarType"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:107)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]"],"mutant":{"filename":"ClosuresFactory.java","line":132,"block":2,"id":{"indexes":"[8]","location":{"mdesc":"()Z","method":"isClosureVarPlaceholder","class":"ch.lambdaj.function.closure.ClosuresFactory$ClosureVarType"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":132,"block":1,"id":{"indexes":"[5]","location":{"mdesc":"()Z","method":"isClosureVarPlaceholder","class":"ch.lambdaj.function.closure.ClosuresFactory$ClosureVarType"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:96)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:247), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.AbstractClosure.checkParams(AbstractClosure.java:251), ch.lambdaj.function.closure.AbstractClosure.bindParams(AbstractClosure.java:209), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:153), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"ClosuresFactory.java","line":132,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"()Z","method":"isClosureVarPlaceholder","class":"ch.lambdaj.function.closure.ClosuresFactory$ClosureVarType"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFreeClassArgument(ClosureSpecialCasesTest.java:108)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.ClosureSpecialCasesTest.testWithFixedClassArgument(ClosureSpecialCasesTest.java:97)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:30), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:72)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:30), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:59)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:30), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:85)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.function.closure.InvokableMethod.invoke(InvokableMethod.java:30), ch.lambdaj.function.closure.AbstractClosure.closeOne(AbstractClosure.java:158), ch.lambdaj.function.closure.Closure.apply(Closure.java:23), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:46)]"],"mutant":{"filename":"InvokableMethod.java","line":30,"block":1,"id":{"indexes":"[9]","location":{"mdesc":"(Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"invoke","class":"ch.lambdaj.function.closure.InvokableMethod"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFreeClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithFixedClassArgument(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest)]"],"killing":["Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$7284f6db.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListOnly(ClosureSpecialCasesTest.java:69)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$7284f6db.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:56)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithNonEmptyListOnly(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$7284f6db.oneArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithNonEmptyListOnly(ClosureSpecialCasesTest.java:82)]","Description [testClass=ch.lambdaj.ClosureSpecialCasesTest, name=testWithEmptyListAndUnboundVar(ch.lambdaj.ClosureSpecialCasesTest), assertion=ch.lambdaj.proxy.InvocationInterceptor.intercept(InvocationInterceptor.java:21), ch.lambdaj.ClosureSpecialCasesTest$$EnhancerByCGLIB$$7284f6db.twoArg(<generated>), ch.lambdaj.ClosureSpecialCasesTest.testWithEmptyListAndUnboundVar(ClosureSpecialCasesTest.java:43)]"],"mutant":{"filename":"InvocationInterceptor.java","line":21,"block":1,"id":{"indexes":"[8]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;Lnet\/sf\/cglib\/proxy\/MethodProxy;)Ljava\/lang\/Object;","method":"intercept","class":"ch.lambdaj.proxy.InvocationInterceptor"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
