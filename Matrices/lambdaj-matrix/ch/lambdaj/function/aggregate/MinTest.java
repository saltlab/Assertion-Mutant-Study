{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=ch.lambdaj.function.aggregate.Min.choose(Min.java:22), ch.lambdaj.function.aggregate.Min.choose(Min.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.Assert.assertThatMin(Assert.java:26), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:24)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]"],"mutant":{"filename":"Chooser.java","line":23,"block":3,"id":{"indexes":"[10]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:36)]"],"mutant":{"filename":"Chooser.java","line":22,"block":2,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]"],"mutant":{"filename":"Chooser.java","line":24,"block":5,"id":{"indexes":"[19]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:24)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:24)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:24)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:24)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=ch.lambdaj.function.aggregate.Min.choose(Min.java:22), ch.lambdaj.function.aggregate.Min.choose(Min.java:1), ch.lambdaj.function.aggregate.Chooser.aggregate(Chooser.java:24), ch.lambdaj.Assert.assertThatMin(Assert.java:26), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:36)]"],"mutant":{"filename":"Chooser.java","line":22,"block":1,"id":{"indexes":"[4]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:24)]"],"mutant":{"filename":"Chooser.java","line":23,"block":4,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;","method":"aggregate","class":"ch.lambdaj.function.aggregate.Chooser"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]"],"mutant":{"filename":"Min.java","line":22,"block":3,"id":{"indexes":"[12]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":[],"mutant":{"filename":"Min.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"}}}
{"coveredBy":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest)]"],"killing":["Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testLesserFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:18), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:20), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testLesserFirst(MinTest.java:22)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]","Description [testClass=ch.lambdaj.function.aggregate.MinTest, name=testGreaterFirst(ch.lambdaj.function.aggregate.MinTest), assertion=org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:30), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:32), org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20), ch.lambdaj.Assert.assertThatMin(Assert.java:27), ch.lambdaj.function.aggregate.MinTest.testGreaterFirst(MinTest.java:34)]"],"mutant":{"filename":"Min.java","line":22,"block":1,"id":{"indexes":"[6]","location":{"mdesc":"(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;","method":"choose","class":"ch.lambdaj.function.aggregate.Min"},"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"}}}
